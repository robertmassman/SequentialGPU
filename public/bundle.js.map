{"version":3,"file":"bundle.js","sources":["../js/pipelineCacheManager.js","../js/pipelineManager.js","../js/bufferManager.js","../js/simpleTexturePool.js","../js/textureManager.js","../js/bindingManager.js","../js/FilterManager.js","../js/histogram.js","../js/commandQueueManager.js","../js/settingsValidator.js","../js/recoveryManager.js","../js/debugLogger.js","../js/webGpuRenderer.js","../js/sequentialgpu.js"],"sourcesContent":["class PipelineCacheManager {\n    constructor(app) {\n        this.app = app; // Store reference to app\n        this.device = app.device;\n        \n        this.shaderCache = new Map();\n        this.pipelineCache = new Map();\n        this.layoutCache = new Map();\n\n        // Enhanced performance metrics\n        this.stats = {\n            // Compilation stats\n            shadersCompiled: 0,\n            pipelinesCreated: 0,\n            pipelinesReused: 0,\n            layoutsCreated: 0,\n            layoutsReused: 0,\n            cacheHits: 0,\n            cacheMisses: 0,\n\n            // Timing metrics\n            averageCompilationTime: 0,\n            totalCompilationTime: 0,\n            lastCompilationTime: 0,\n\n            // Memory metrics\n            currentCacheSize: 0,\n            peakCacheSize: 0,\n\n            // Cache efficiency\n            hitRate: 0,\n            missRate: 0,\n\n            // Timestamps\n            lastUpdate: Date.now(),\n            startTime: Date.now()\n        };\n\n        // LRU cache configuration\n        this.maxCacheSize = 100;\n        this.lruList = new Map();\n    }\n\n    /**\n     * Maintains cache size within limits using LRU policy\n     * @private\n     */\n    _maintainCacheSize() {\n        if (this.shaderCache.size > this.maxCacheSize) {\n            // Sort entries by last used time\n            const sortedEntries = [...this.lruList.entries()]\n                .sort(([, timeA], [, timeB]) => timeA - timeB);\n\n            // Remove oldest entries until we're back to maxCacheSize\n            while (this.shaderCache.size > this.maxCacheSize) {\n                const [oldestKey] = sortedEntries.shift();\n                this.shaderCache.delete(oldestKey);\n                this.lruList.delete(oldestKey);\n            }\n        }\n    }\n\n    /**\n     * Simple string hashing function\n     * @private\n     */\n    _hashString(str) {\n        let hash = 0;\n        for (let i = 0; i < str.length; i++) {\n            const char = str.charCodeAt(i);\n            hash = ((hash << 5) - hash) + char;\n            hash = hash & hash;\n        }\n        return hash.toString(36);\n    }\n\n    /**\n     * Clears all caches\n     */\n    dispose() {\n        this.shaderCache.clear();\n        this.pipelineCache.clear();\n        this.layoutCache.clear();\n        this.lruList.clear();\n    }\n\n    storeCacheState() {\n        return {\n            pipelines: Array.from(this.pipelineCache.entries()),\n            layouts: Array.from(this.layoutCache.entries()),\n            stats: { ...this.stats }\n        };\n    }\n\n    async restoreCacheState(previousState, newDimensions) {\n        // Filter and restore compatible cache entries\n        for (const [key, entry] of previousState.pipelines) {\n            if (this.isCompatibleWithDimensions(entry, newDimensions)) {\n                this.pipelineCache.set(key, entry);\n            }\n        }\n\n        for (const [key, entry] of previousState.layouts) {\n            if (this.isCompatibleLayout(entry, newDimensions)) {\n                this.layoutCache.set(key, entry);\n            }\n        }\n\n        // Update stats\n        this.stats = {\n            ...this.stats,\n            pipelinesReused: this.pipelineCache.size,\n            layoutsReused: this.layoutCache.size\n        };\n    }\n\n    isCompatibleWithDimensions(entry, dimensions) {\n        // Check if pipeline/layout is compatible with new dimensions\n        return entry.metadata &&\n            (!entry.metadata.dimensions || // No dimension requirements\n                (entry.metadata.dimensions.width <= dimensions.width &&\n                    entry.metadata.dimensions.height <= dimensions.height));\n    }\n\n    isCompatibleLayout(entry, dimensions) {\n        // Additional layout-specific compatibility checks\n        return this.isCompatibleWithDimensions(entry, dimensions) &&\n            entry.layout && !entry.layout.destroyed;\n    }\n\n    ///////////////\n    _updatePerformanceMetrics(params) {\n        const now = Date.now();\n        const {\n            operationType,    // 'shader', 'pipeline', or 'layout'\n            operation,       // 'create', 'reuse', or 'compile'\n            duration = 0,    // Time taken for operation\n            size = 0         // Size of cached item (if applicable)\n        } = params;\n\n        // Update operation counts\n        switch (`${operationType}_${operation}`) {\n            case 'shader_compile':\n                this.stats.shadersCompiled++;\n                this.stats.totalCompilationTime += duration;\n                this.stats.lastCompilationTime = duration;\n                this.stats.averageCompilationTime = this.stats.totalCompilationTime / this.stats.shadersCompiled;\n                break;\n\n            case 'pipeline_create':\n                this.stats.pipelinesCreated++;\n                this.stats.cacheMisses++;\n                break;\n\n            case 'pipeline_reuse':\n                this.stats.pipelinesReused++;\n                this.stats.cacheHits++;\n                break;\n\n            case 'layout_create':\n                this.stats.layoutsCreated++;\n                break;\n\n            case 'layout_reuse':\n                this.stats.layoutsReused++;\n                break;\n        }\n\n        // Update cache efficiency metrics\n        const totalOperations = this.stats.cacheHits + this.stats.cacheMisses;\n        if (totalOperations > 0) {\n            this.stats.hitRate = this.stats.cacheHits / totalOperations;\n            this.stats.missRate = this.stats.cacheMisses / totalOperations;\n        }\n\n        // Update memory metrics\n        this.stats.currentCacheSize =\n            this.shaderCache.size +\n            this.pipelineCache.size +\n            this.layoutCache.size;\n\n        this.stats.peakCacheSize = Math.max(\n            this.stats.peakCacheSize,\n            this.stats.currentCacheSize\n        );\n\n        // Update timestamps\n        this.stats.lastUpdate = now;\n    }\n\n    ////////// NEW\n    /**\n    * Creates a shader module with enhanced error handling\n    * @param {string} code - The shader code\n    * @param {Object} options - Additional options\n    * @param {string} options.label - Label for shader module\n    * @returns {Promise<GPUShaderModule>} The shader module\n    */\n    async getShaderModule(code, options = {}) {\n        const shaderKey = this._hashString(code);\n        const { label = 'Unknown Shader' } = options; // Remove fallbackId parameter\n\n        if (!this.shaderCache.has(shaderKey)) {\n            const startTime = performance.now();\n\n            // Create shader module\n            const module = this.device.createShaderModule({\n                code,\n                label: `${label} Shader Module`\n            });\n\n            try {\n                // Check for compilation errors\n                const compilationInfo = await module.getCompilationInfo();\n                const errors = compilationInfo.messages.filter(msg => msg.type === 'error');\n                const warnings = compilationInfo.messages.filter(msg => msg.type === 'warning');\n\n                // Log warnings but continue\n                if (warnings.length > 0) {\n                    console.warn(`Shader warnings in ${label}:`,\n                        warnings.map(w => this._formatShaderMessage(w)).join('\\n'));\n                }\n\n                // If we have errors, throw detailed error with specific error type\n                if (errors.length > 0) {\n                    const errorDetails = this._formatShaderErrors(errors, code, label);\n                    console.error(`Shader compilation failed for ${label}:`, errorDetails);\n\n                    // Create a special error type that can be identified\n                    const error = new Error(`Shader compilation failed: ${errorDetails.summary}`);\n                    error.name = 'ShaderCompilationError';\n                    error.details = errorDetails;\n                    throw error;\n                }\n            } catch (error) {\n\n                const errorInfo = {\n                    label: label || shaderURL,\n                    summary: `Failed to compile shader: ${error.message}`,\n                    details: this._formatErrorDetails(error),\n                    errorCount: 1\n                };\n                \n                // Rethrow to allow graceful handling upstream\n                throw new Error(`ShaderCompilationError: ${errorInfo}`);\n            }\n\n            const duration = performance.now() - startTime;\n            this.shaderCache.set(shaderKey, module);\n\n            // Update metrics for shader compilation\n            this._updatePerformanceMetrics({\n                operationType: 'shader',\n                operation: 'compile',\n                duration,\n                size: code.length\n            });\n\n            this._maintainCacheSize();\n        }\n\n        this.lruList.set(shaderKey, Date.now());\n        return this.shaderCache.get(shaderKey);\n    }\n\n    _formatErrorDetails(error) {\n        // Format details array with line numbers if available\n        if (error.lineNum && error.linePos) {\n            return [\n                `Error at line ${error.lineNum}, position ${error.linePos}`,\n                error.message\n            ];\n        }\n        return [error.message];\n    }\n\n    /**\n     * Formats shader compilation errors with context\n     * @private\n     */\n    _formatShaderErrors(errors, code, label) {\n        const lines = code.split('\\n');\n        const formattedErrors = errors.map(error => this._formatShaderMessage(error, lines));\n\n        return {\n            summary: errors.map(e => e.message).join('\\n'),\n            details: formattedErrors,\n            errorCount: errors.length,\n            label\n        };\n    }\n\n    /**\n     * Formats a single shader compilation message with line context\n     * @private\n     */\n    _formatShaderMessage(message, codeLines = []) {\n        const { lineNum, linePos, offset, length, message: msg, type } = message;\n\n        let formattedMsg = `[${type.toUpperCase()}] Line ${lineNum}:${linePos} - ${msg}`;\n\n        // Add code context if we have the code lines\n        if (codeLines.length > 0 && lineNum > 0 && lineNum <= codeLines.length) {\n            const line = codeLines[lineNum - 1];\n            const pointer = ' '.repeat(linePos - 1) + '^'.repeat(Math.max(1, length));\n            formattedMsg += `\\n${line}\\n${pointer}`;\n        }\n\n        return formattedMsg;\n    }\n    //////////////\n\n    getCacheStats() {\n        return {\n            ...this.stats,\n            cacheSize: {\n                shaders: this.shaderCache.size,\n                pipelines: this.pipelineCache.size,\n                layouts: this.layoutCache.size,\n                total: this.stats.currentCacheSize\n            },\n            efficiency: {\n                hitRate: this.stats.hitRate.toFixed(2),\n                missRate: this.stats.missRate.toFixed(2),\n                averageCompilationTime: `${this.stats.averageCompilationTime.toFixed(2)}ms`\n            },\n            uptime: Date.now() - this.stats.startTime\n        };\n    }\n\n    getCachePerformance() {\n        return {\n            cacheStats: {\n                hits: this.stats.cacheHits,\n                misses: this.stats.cacheMisses,\n                hitRate: this.stats.hitRate,\n                missRate: this.stats.missRate\n            },\n            performanceStats: {\n                averageCompilationTime: this.stats.averageCompilationTime,\n                totalCompilationTime: this.stats.totalCompilationTime,\n                lastCompilationTime: this.stats.lastCompilationTime\n            },\n            memoryStats: {\n                currentSize: this.stats.currentCacheSize,\n                peakSize: this.stats.peakCacheSize\n            },\n            timestamps: {\n                lastUpdate: this.stats.lastUpdate,\n                uptime: Date.now() - this.stats.startTime\n            }\n        };\n    }\n\n}\n\nexport default PipelineCacheManager","import PipelineCacheManager from \"./pipelineCacheManager.js\";\n\nclass PipelineManager {\n    constructor(app) {\n        this.device = app.device;\n        this.presentationFormat = app.presentationFormat;\n        this.bufferManager = app.bufferManager;\n        this.textureManager = app.textureManager;\n        this.shaderCache = new Map();\n        this.pipelineCacheManager = new PipelineCacheManager(app);\n    }\n\n    async loadShader(url) {\n        try {\n            if (!this.shaderCache.has(url)) {\n                const response = await fetch(url);\n                const code = await response.text();\n                this.shaderCache.set(url, code);\n            }\n            return this.shaderCache.get(url);\n        } catch (error) {\n            console.error(`Failed to load shader from ${url}`);\n            throw error;\n        }\n\n\n    }\n\n    getCacheStats() {\n        return {\n            ...this.pipelineCacheManager.getStats(),\n            shaderURLCacheSize: this.shaderCache.size\n        };\n    }\n\n    dispose() {\n        this.pipelineCacheManager.dispose();\n        this.shaderCache.clear();\n    }\n\n    async _performCacheMaintenance() {\n        // Implement cache size limits\n        const MAX_CACHE_SIZE = 100;\n        if (this.pipelineCacheManager.pipelineCache.size > MAX_CACHE_SIZE) {\n            // Get all entries sorted by last used\n            const entries = Array.from(this.pipelineCacheManager.pipelineCache.entries())\n                .sort((a, b) => a[1].metadata.lastUsed - b[1].metadata.lastUsed);\n\n            // Remove oldest entries until we're back to the limit\n            while (this.pipelineCacheManager.pipelineCache.size > MAX_CACHE_SIZE) {\n                const [key] = entries.shift();\n                this.pipelineCacheManager.pipelineCache.delete(key);\n            }\n\n            if (this.device.label?.includes('debug')) {\n                console.log('Cache maintenance performed', {\n                    newSize: this.pipelineCacheManager.pipelineCache.size\n                });\n            }\n        }\n    }\n\n    _generateLayoutKey(filter, pass) {\n        const keyComponents = {\n            type: filter.type,\n            inputTextureCount: pass.inputTexture?.length || 0,\n            hasBuffer: !!filter.bufferAttachment?.bindings,\n            bufferType: filter.type === 'compute' ? 'storage' : 'uniform',\n            bindingIndex: filter.bufferAttachment?.bindingIndex\n        };\n        return this.pipelineCacheManager._hashString(JSON.stringify(keyComponents));\n    }\n\n    createBindGroupLayout(filter, pass) {\n        // Generate a unique key for the layout\n        const layoutKey = this._generateLayoutKey(filter, pass);\n\n        const entries = [];\n        const visibility = filter.type === 'compute' ? GPUShaderStage.COMPUTE : GPUShaderStage.FRAGMENT;\n\n        // Add sampler binding with correct visibility\n        entries.push({\n            binding: 0,\n            visibility,\n            sampler: { type: 'filtering' }\n        });\n\n        // Add texture bindings with correct visibility\n        if (pass.inputTexture && Array.isArray(pass.inputTexture)) {\n            pass.inputTexture.forEach((_, index) => {\n                entries.push({\n                    binding: index + 1,\n                    visibility,\n                    texture: { sampleType: 'float' }\n                });\n            });\n        }\n\n        // Add buffer binding if needed with correct visibility\n        if (filter.bufferAttachment?.bindings) {\n            entries.push({\n                binding: filter.bufferAttachment.bindingIndex || 3,\n                visibility,\n                buffer: {\n                    type: filter.type === 'compute' ? 'storage' : 'uniform'\n                }\n            });\n        }\n\n        // Store the layout entries for reference\n        pass.bindGroupLayoutEntries = entries;\n\n        // Try to get from cache first\n        let layout = this.pipelineCacheManager.layoutCache.get(layoutKey)?.layout;\n\n        if (!layout) {\n            layout = this.device.createBindGroupLayout({ entries });\n\n            // Cache the new layout\n            this.pipelineCacheManager.layoutCache.set(layoutKey, {\n                layout,\n                entries,\n                metadata: {\n                    createdAt: Date.now(),\n                    type: filter.type,\n                    lastUsed: Date.now()\n                }\n            });\n            this.pipelineCacheManager.stats.layoutsCreated++;\n        }\n        else {\n            this.pipelineCacheManager.stats.layoutsReused++;\n            this.pipelineCacheManager.layoutCache.get(layoutKey).metadata.lastUsed = Date.now();\n        }\n\n        // Important: store entries on layout for bind group creation\n        layout.entries = entries;\n\n        return layout;\n    }\n\n    ////////////////\n    _generateDetailedPipelineKey(config) {\n        const keyComponents = {\n            // Basic pipeline configuration\n            type: config.type,\n            shader: config.shaderURL,  // Use URL instead of content\n            format: config.presentationFormat,\n            sampleCount: config.sampleCount,\n\n            // Detailed layout information\n            layoutEntries: config.bindGroupLayout.map(entry => ({\n                binding: entry.binding,\n                visibility: entry.visibility,\n                bufferType: entry.buffer?.type,\n                textureFormat: entry.texture?.format,\n                samplerType: entry.sampler?.type,\n                viewDimension: entry.texture?.viewDimension\n            })),\n\n            // For render pipelines\n            vertex: config.type !== 'compute' ? {\n                buffers: [\n                    {\n                        arrayStride: 8,\n                        stepMode: 'vertex',\n                        attributes: [\n                            { format: 'float32x2', offset: 0, shaderLocation: 0 }\n                        ]\n                    },\n                    {\n                        arrayStride: 8,\n                        stepMode: 'vertex',\n                        attributes: [\n                            { format: 'float32x2', offset: 0, shaderLocation: 1 }\n                        ]\n                    }\n                ],\n                entryPoint: 'vs'\n            } : undefined,\n\n            fragment: config.type !== 'compute' ? {\n                targets: [{ format: config.presentationFormat }],\n                entryPoint: 'fs'\n            } : undefined,\n\n            // For compute pipelines\n            compute: config.type === 'compute' ? {\n                entryPoint: 'main'\n            } : undefined,\n\n            // Add multisample state for render pipelines\n            multisample: config.type !== 'compute' ? {\n                count: config.sampleCount,\n                mask: 0xFFFFFFFF,\n                alphaToCoverageEnabled: false\n            } : undefined\n        };\n\n        // Generate a deterministic JSON string\n        const sortedKey = JSON.stringify(keyComponents, Object.keys(keyComponents).sort());\n        return this.pipelineCacheManager._hashString(sortedKey);\n    }\n\n    createBindGroup(layout, filter, pass, bufferResource) {\n\n        if (!layout) {\n            throw new Error('No layout provided for bind group creation');\n        }\n\n        const entries = [];\n\n        // Add sampler\n        entries.push({\n            binding: 0,\n            resource: this.device.createSampler({\n                magFilter: 'linear',\n                minFilter: 'linear'\n            })\n        });\n\n        // Add texture resources - maintain original binding index calculation\n        if (pass.inputTexture && Array.isArray(pass.inputTexture)) {\n            pass.inputTexture.forEach((textureName, index) => {\n                const textureView = this.textureManager.getTexture(textureName)?.createView();\n                if (!textureView) {\n                    throw new Error(`Texture ${textureName} not found`);\n                }\n                entries.push({\n                    binding: index + 1,  // Keep original binding calculation\n                    resource: textureView\n                });\n            });\n        }\n\n        // Add buffer resource if needed\n        if (filter.bufferAttachment?.bindings && bufferResource?.buffer) {\n            entries.push({\n                binding: filter.bufferAttachment.bindingIndex || 3,\n                resource: {\n                    buffer: bufferResource.buffer,\n                    offset: 0,\n                    size: bufferResource.buffer.size\n                }\n            });\n        }\n\n        try {\n            const bindGroup = this.device.createBindGroup({\n                layout,\n                entries\n            });\n\n            if (!bindGroup) {\n                throw new Error('Failed to create bind group');\n            }\n\n            return bindGroup;\n        } catch (error) {\n            console.error('Error creating bind group:', error);\n            throw error;\n        }\n    }\n\n    async createFilterPipeline(filter) {\n        try {\n            let bufferResource;\n            if (filter.bufferAttachment?.bindings) {\n                bufferResource = await this.bufferManager.createFilterBuffers(filter);\n            }\n\n            let hasValidPasses = false; // Track if any passes are valid\n\n            for (const pass of filter.passes) {\n                const startTime = performance.now();\n\n                try {\n                    // Load and cache shader with enhanced error handling\n                    const shaderCode = await this.loadShader(pass.shaderURL);\n                    const shaderModule = await this.pipelineCacheManager.getShaderModule(\n                        shaderCode,\n                        {\n                            label: `${filter.label}_${pass.label || 'pass'}`\n                        }\n                    );\n\n                    // Create bind group layout and pipeline as before...\n                    const bindGroupLayout = this.createBindGroupLayout(filter, pass);\n\n\n                    // Create pipeline layout\n                    const pipelineLayout = this.device.createPipelineLayout({\n                        bindGroupLayouts: [bindGroupLayout]\n                    });\n\n                    // Generate pipeline key using URL\n                    const pipelineKey = this._generateDetailedPipelineKey({\n                        type: filter.type,\n                        shaderURL: pass.shaderURL,  // Use URL instead of content\n                        presentationFormat: this.presentationFormat,\n                        sampleCount: filter.type === 'compute' ? 1 : 4,\n                        bindGroupLayout: bindGroupLayout.entries\n                    });\n\n                    let pipeline = this.pipelineCacheManager.pipelineCache.get(pipelineKey);\n                    let actualPipeline;\n\n                    if (!pipeline) {\n                        if (filter.type === 'compute') {\n                            const computeDescriptor = {\n                                layout: pipelineLayout,\n                                compute: {\n                                    module: shaderModule,\n                                    entryPoint: 'main'\n                                }\n                            };\n                            actualPipeline = this.device.createComputePipeline(computeDescriptor);\n                        } else {\n                            const renderDescriptor = {\n                                layout: pipelineLayout,\n                                vertex: {\n                                    module: shaderModule,\n                                    entryPoint: 'vs',\n                                    buffers: [\n                                        {\n                                            arrayStride: 8,\n                                            attributes: [{ shaderLocation: 0, format: 'float32x2', offset: 0 }]\n                                        },\n                                        {\n                                            arrayStride: 8,\n                                            attributes: [{ shaderLocation: 1, format: 'float32x2', offset: 0 }]\n                                        }\n                                    ]\n                                },\n                                fragment: {\n                                    module: shaderModule,\n                                    entryPoint: 'fs',\n                                    targets: [{ format: this.presentationFormat }]\n                                },\n                                multisample: {\n                                    count: 4\n                                }\n                            };\n                            actualPipeline = this.device.createRenderPipeline(renderDescriptor);\n                        }\n\n                        this.pipelineCacheManager.pipelineCache.set(pipelineKey, {\n                            pipeline: actualPipeline,\n                            metadata: {\n                                createdAt: Date.now(),\n                                type: filter.type,\n                                shaderURL: pass.shaderURL,\n                                lastUsed: Date.now()\n                            }\n                        });\n\n                        const endTime = performance.now();\n                        this.pipelineCacheManager.stats.pipelinesCreated++;\n                        this.pipelineCacheManager.stats.cacheMisses++;\n                        this.pipelineCacheManager._updatePerformanceMetrics({\n                            operationType: 'pipeline',\n                            operation: 'create',\n                            duration: endTime - startTime\n                        });\n                    } else {\n                        actualPipeline = pipeline.pipeline;\n                        pipeline.metadata.lastUsed = Date.now();\n                        this.pipelineCacheManager.stats.pipelinesReused++;\n                        this.pipelineCacheManager.stats.cacheHits++;\n                        this.pipelineCacheManager._updatePerformanceMetrics({\n                            operationType: 'pipeline',\n                            operation: 'reuse'\n                        });\n                    }\n\n                    // Assign pipeline first\n                    pass.pipeline = actualPipeline;\n\n                    // Create bind group and verify\n                    pass.bindGroup = [this.createBindGroup(bindGroupLayout, filter, pass, bufferResource)];\n                    if (!pass.bindGroup || !pass.bindGroup[0]) {\n                        throw new Error(`Failed to create valid bind group for pass ${pass.label}`);\n                    }\n\n                    // Wait for GPU operations\n                    await this.device.queue.onSubmittedWorkDone();\n\n                    // Mark this pass as valid\n                    hasValidPasses = true;\n\n                } catch (error) {\n                    // Check if this is a shader compilation error\n                    const isShaderError = error.name === 'ShaderCompilationError';\n\n                    // Log detailed error but don't throw\n                    console.error(`Failed to create pipeline for pass '${pass.label}' in filter '${filter.label}':`,\n                        isShaderError ? 'Shader compilation error' : error);\n\n                    // Mark this pass as inactive so we skip it during rendering\n                    pass.active = false;\n\n                    // Use app.debugLogger if available\n                    if (this.app && this.app.debugLogger) {\n                        this.app.debugLogger.error('PipelineCreation',\n                            `Shader compilation failed for ${filter.label}/${pass.label}, pass will be skipped.`,\n                            error);\n                    }\n\n                    // Continue with other passes instead of failing\n                    continue;\n                }\n\n            }\n\n            // Only throw an error if all passes failed\n            if (!hasValidPasses && filter.passes.length > 0) {\n                throw new Error(`All passes failed for filter ${filter.label}`);\n            }\n\n            await this._performCacheMaintenance();\n\n            return bufferResource;\n        } catch (error) {\n            // Check if it's a shader compilation error\n            if (error.name === 'ShaderCompilationError') {\n                // Format error for display\n                const errorDetails = {\n                    label: filter.label || 'Unknown Shader',\n                    summary: error.message,\n                    details: this._parseShaderErrorMessage(error.message),\n                    errorCount: 1\n                };\n            }\n            console.error(`Failed to create pipeline for filter ${filter.label}`, error);\n            throw error;\n        }\n    }\n\n    // Helper to parse shader error messages into structured format\n    _parseShaderErrorMessage(message) {\n        // Split message by lines\n        const lines = message.split('\\n');\n        // Extract relevant parts and format for display\n        return lines.map(line => {\n            // Remove any ansi color codes and format nicely\n            return line.replace(/\\x1b\\[\\d+m/g, '');\n        });\n    }\n\n    /**\n     * Determines appropriate fallback shader type based on filter properties\n     * This method is kept for documentation purposes, but fallbacks are not currently used.\n     * @private\n     */\n    _determineFallbackType(filter, pass) {\n        // Implementation remains for documentation purposes\n        if (filter.type === 'compute') {\n            return 'basic-compute';\n        }\n\n        const filterName = filter.label.toLowerCase();\n        if (filterName.includes('gray') || filterName.includes('luma')) {\n            return 'grayscale';\n        }\n\n        return 'basic-render';\n    }\n}\n\nexport default PipelineManager;","class BufferManager {\n    constructor(device) {\n        this.device = device;\n    }\n\n    applyOffsetPadding(size) {\n        const PADDING_SIZE = 16;\n        return Math.ceil(size / PADDING_SIZE) * PADDING_SIZE;\n    }\n\n    /**\n     * Calculates the memory layout for buffer bindings with proper alignment.\n     *\n     * @param {Object} bindings - Buffer binding configurations\n     * @returns {Object} Layout information including sections and total size\n     * @property {Map} sections - Map of section layouts by type\n     * @property {number} totalSize - Total buffer size in bytes\n     */\n    calculateBufferSize(binding) {\n        if (binding.size) {\n            // Use explicit size if provided\n            return binding.size;\n        }\n\n        if (binding.value === undefined) {\n            // Default size if no value provided\n            return 4;\n        }\n\n        // Calculate size based on value\n        if (Array.isArray(binding.value)) {\n            return binding.value.length * 4; // 4 bytes per element\n        }\n\n        // Handle different types\n        switch (binding.type) {\n            case 'float':\n            case 'uniform':\n                return 4; // Single float or uniform\n            case 'vec2':\n                return 8; // Two floats\n            case 'vec3':\n                return 12; // Three floats\n            case 'vec4':\n                return 16; // Four floats\n            case 'mat4':\n                return 64; // 4x4 matrix\n            default:\n                return 4; // Default to single float size\n        }\n    }\n\n    createComputeBuffer(filter, binding) {\n        // Calculate buffer size based on binding value\n        const size = this.calculateBufferSize(binding);\n        const paddedSize = this.applyOffsetPadding(size);\n\n        // Create the buffer\n        const buffer = this.device.createBuffer({\n            size: paddedSize,\n            usage: GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST,\n            label: `${filter.label} Compute Buffer`\n        });\n\n        // Initialize buffer if initial value is provided\n        if (binding.value !== undefined) {\n            const initialData = Array.isArray(binding.value) ?\n                new Uint32Array(binding.value) :\n                new Uint32Array([binding.value]);\n            this.device.queue.writeBuffer(buffer, 0, initialData);\n        }\n\n        return buffer;\n    }\n\n    /**\n     * Creates and initializes buffers for a filter's requirements.\n     *\n     * @async\n     * @param {Object} filter - Filter configuration object\n     * @returns {Promise<Object>} Created buffer and update methods\n     * @property {GPUBuffer} buffer - The created GPU buffer\n     * @property {Object} layout - Buffer layout information\n     * @property {Function} update - Buffer update function\n     */\n    async createFilterBuffers(filter) {\n        const bindings = filter.bufferAttachment.bindings;\n        const isCompute = filter.type === 'compute';\n\n        if (isCompute) {\n            const computeBuffers = {};\n            let updateFuncs = {};\n\n            // Process each binding for compute shader\n            for (const [key, binding] of Object.entries(bindings)) {\n                if (binding.usage === 'write' || binding.usage === 'read' || binding.usage === 'readwrite') {\n                    computeBuffers[key] = this.createComputeBuffer(filter, binding);\n\n                    // Create update function based on binding type\n                    if (binding.usage !== 'write') { // Only create update for readable buffers\n                        updateFuncs[key] = (newValue) => {\n                            const data = Array.isArray(newValue) ?\n                                new Uint32Array(newValue) :\n                                new Uint32Array([newValue]);\n                            this.device.queue.writeBuffer(computeBuffers[key], 0, data);\n                        };\n                    }\n                }\n            }\n\n            // Return single buffer for backward compatibility\n            return {\n                buffer: computeBuffers.histogram || computeBuffers[Object.keys(computeBuffers)[0]], // Get first buffer if no histogram\n                buffers: computeBuffers,\n                update: (newBindings) => {\n                    for (const [key, value] of Object.entries(newBindings)) {\n                        if (updateFuncs[key]) {\n                            updateFuncs[key](value);\n                        }\n                    }\n                }\n            };\n        }\n\n        // Regular buffer creation for non-compute shaders\n        let uniformsArray = [];\n        let uniformsSize = 0;\n        let floatsArray = [];\n        let floatsSize = 0;\n\n        // Process uniform bindings\n        for (const param in bindings) {\n            if (bindings[param].type === 'uniform') {\n                bindings[param].bufferOffset = uniformsSize;\n                uniformsSize += 4;\n                uniformsArray.push(bindings[param].value);\n            }\n        }\n\n        // Apply padding after uniforms\n        uniformsSize = this.applyOffsetPadding(uniformsSize);\n        floatsSize = uniformsSize;\n\n        // Process float bindings\n        for (const param in bindings) {\n            if (bindings[param].type === 'float') {\n                bindings[param].bufferOffset = floatsSize;\n                if (Array.isArray(bindings[param].value)) {\n                    floatsSize += (bindings[param].value.length * 4);\n                    floatsArray = [...floatsArray, ...bindings[param].value];\n                } else {\n                    floatsSize += 4;\n                    floatsArray.push(bindings[param].value);\n                }\n            }\n        }\n\n        // Apply final padding\n        floatsSize = this.applyOffsetPadding(floatsSize);\n\n        // Create the buffer\n        const buffer = this.device.createBuffer({\n            size: Math.max(floatsSize, 16),\n            usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST,\n            label: `${filter.label} Buffer`\n        });\n\n        // Write initial data\n        if (uniformsArray.length > 0) {\n            this.writeBuffer(buffer, 0, uniformsArray, 'uniform');\n        }\n        if (floatsArray.length > 0) {\n            this.writeBuffer(buffer, uniformsSize, floatsArray, 'float');\n        }\n\n        return {\n            buffer,\n            update: (newBindings) => this.updateBufferData(buffer, newBindings, bindings)\n        };\n    }\n\n    writeBuffer(buffer, offset, data, type) {\n        const arrayType = type === 'uniform' ? Uint32Array : Float32Array;\n        const arrayData = Array.isArray(data) ? data : [data];\n        this.device.queue.writeBuffer(buffer, offset, new arrayType(arrayData));\n    }\n\n    updateBufferData(buffer, newBindings, originalBindings) {\n        try {\n            for (const [key, value] of Object.entries(newBindings)) {\n                if (originalBindings[key]) {\n                    const binding = originalBindings[key];\n                    this.writeBuffer(\n                        buffer,\n                        binding.bufferOffset,\n                        value.value,\n                        binding.type\n                    );\n                } else {\n                    throw new Error(\n                        'BufferError',\n                        `Binding \"${key}\" not found in original bindings`\n                    );\n                }\n            }\n        } catch (error) {\n            console.error(\n                'BufferError',\n                'Failed to update buffer data',\n                error\n            );\n            throw error;\n        }\n    }\n}\n\nexport default BufferManager;\n\n","class SimpleTexturePool {\n    constructor(device) {\n        this.device = device;\n        this.availableTextures = new Map(); // descriptor hash -> texture[]\n        \n        // Add comprehensive memory tracking properties\n        this.totalMemoryUsage = 0;      // Total memory usage in bytes\n        this.activeMemoryUsage = 0;     // Memory used by active textures\n        this.pooledMemoryUsage = 0;     // Memory used by pooled textures\n        this.textureCount = {\n            active: 0,                  // Number of active textures\n            pooled: 0,                  // Number of pooled textures\n            created: 0,                 // Total textures created\n            reused: 0                   // Total textures reused\n        };\n    }\n\n    /**\n     * Get a texture descriptor hash for pooling\n     */\n    getDescriptorHash(descriptor) {\n        const key = `${descriptor.format}_${descriptor.size.width}x${descriptor.size.height}` +\n            `_${descriptor.usage}_${descriptor.sampleCount || 1}`;\n        return key;\n    }\n\n    /**\n     * Calculate memory usage for a texture based on its descriptor\n     */\n    calculateTextureMemoryUsage(descriptor) {\n        const bytesPerPixel = this.getFormatSize(descriptor.format);\n        const width = descriptor.size.width;\n        const height = descriptor.size.height;\n        return width * height * bytesPerPixel;\n    }\n\n    /**\n     * Get a texture from the pool or create a new one\n     */\n    acquire(descriptor) {\n        const key = this.getDescriptorHash(descriptor);\n        const available = this.availableTextures.get(key) || [];\n        const memoryUsage = this.calculateTextureMemoryUsage(descriptor);\n\n        if (available.length > 0) {\n            // Reuse an existing texture from the pool\n            const texture = available.pop();\n            \n            // Update memory tracking\n            this.pooledMemoryUsage -= memoryUsage;\n            this.activeMemoryUsage += memoryUsage;\n            this.textureCount.pooled--;\n            this.textureCount.active++;\n            this.textureCount.reused++;\n            \n            return texture;\n        }\n\n        // Create new texture if none available\n        const texture = this.device.createTexture(descriptor);\n        \n        // Store descriptor and memory usage on texture for tracking\n        texture.descriptor = {...descriptor}; // Clone to avoid reference issues\n        texture._memoryUsage = memoryUsage;\n        \n        // Update memory tracking\n        this.totalMemoryUsage += memoryUsage;\n        this.activeMemoryUsage += memoryUsage;\n        this.textureCount.active++;\n        this.textureCount.created++;\n        \n        return texture;\n    }\n\n    /**\n     * Return a texture to the pool for reuse\n     */\n    release(texture) {\n        if (!texture || !texture.descriptor) {\n            return;\n        }\n\n        const key = this.getDescriptorHash(texture.descriptor);\n        const available = this.availableTextures.get(key) || [];\n        const memoryUsage = texture._memoryUsage || 0;\n        \n        // Update memory tracking\n        this.activeMemoryUsage -= memoryUsage;\n        this.pooledMemoryUsage += memoryUsage;\n        this.textureCount.active--;\n        this.textureCount.pooled++;\n        \n        available.push(texture);\n        this.availableTextures.set(key, available);\n    }\n\n    /**\n     * Get bytes per pixel for a format\n     */\n    getFormatSize(format) {\n        switch(format) {\n            case 'r8unorm': \n            case 'r8snorm': \n            case 'r8uint':\n            case 'r8sint':\n                return 1;\n            case 'r16uint':\n            case 'r16sint':\n            case 'r16float':\n            case 'rg8unorm':\n            case 'rg8snorm':\n                return 2;\n            case 'r32float':\n            case 'r32uint':\n            case 'r32sint':\n            case 'rg16float':\n            case 'rgba8unorm':\n            case 'rgba8unorm-srgb':\n            case 'rgba8snorm':\n            case 'bgra8unorm':\n            case 'bgra8unorm-srgb':\n                return 4;\n            case 'rg32float':\n            case 'rgba16float':\n                return 8;\n            case 'rgba32float':\n                return 16;\n            default:\n                return 4; // Default to 4 bytes for unknown formats\n        }\n    }\n\n    /**\n     * Get current memory statistics\n     */\n    getMemoryStats() {\n        return {\n            totalBytes: this.totalMemoryUsage,\n            activeBytes: this.activeMemoryUsage,\n            pooledBytes: this.pooledMemoryUsage,\n            megabytes: {\n                total: (this.totalMemoryUsage / (1024 * 1024)).toFixed(2),\n                active: (this.activeMemoryUsage / (1024 * 1024)).toFixed(2),\n                pooled: (this.pooledMemoryUsage / (1024 * 1024)).toFixed(2)\n            },\n            textureCount: {\n                active: this.textureCount.active,\n                pooled: this.textureCount.pooled,\n                total: this.textureCount.active + this.textureCount.pooled,\n                created: this.textureCount.created,\n                reused: this.textureCount.reused,\n                reuseRate: this.textureCount.created > 0 ? \n                    (this.textureCount.reused / (this.textureCount.created + this.textureCount.reused)).toFixed(2) : \"0.00\"\n            },\n            formats: this.getFormatDistribution()\n        };\n    }\n    \n    /**\n     * Get distribution of texture formats in the pool\n     */\n    getFormatDistribution() {\n        const formats = {};\n        for (const [key, textures] of this.availableTextures.entries()) {\n            const format = key.split('_')[0];\n            formats[format] = (formats[format] || 0) + textures.length;\n        }\n        return formats;\n    }\n\n    /**\n     * Destroy all pooled textures\n     */\n    destroy() {\n        for (const textures of this.availableTextures.values()) {\n            for (const texture of textures) {\n                // Update memory tracking before destroying\n                this.totalMemoryUsage -= (texture._memoryUsage || 0);\n                this.pooledMemoryUsage -= (texture._memoryUsage || 0);\n                texture.destroy();\n            }\n        }\n        \n        // Reset tracking\n        this.availableTextures.clear();\n        this.textureCount.pooled = 0;\n    }\n}\n\nexport default SimpleTexturePool","import SimpleTexturePool from \"./simpleTexturePool.js\";\n\nclass TextureManager {\n    constructor(app) {\n        this.device = app.device;\n        this.presentationFormat = app.presentationFormat;\n        this.texturePool = new SimpleTexturePool(this.device);\n        this.activeTextures = new Map(); // Currently in-use textures\n    }\n\n    async copyVideoFrameToTexture(video, textureKey) {\n        const canvas = document.createElement('canvas');\n        canvas.width = video.videoWidth;\n        canvas.height = video.videoHeight;\n\n        return new Promise((resolve) => {\n            video.requestVideoFrameCallback(() => {\n                const ctx = canvas.getContext('2d');\n                ctx.drawImage(video, 0, 0);\n                this.copyImageToTexture(canvas, textureKey, {\n                    width: video.videoWidth,\n                    height: video.videoHeight\n                });\n                resolve();\n            });\n        });\n    }\n    /////////////////////// END VIDEO CODE ///////////////////////\n\n    createTexture(key, descriptor) {\n        // Release existing texture if any\n        if (this.activeTextures.has(key)) {\n            this.releaseTexture(key);\n        }\n\n        // Get texture from pool or create new one\n        const texture = this.texturePool.acquire(descriptor);\n        this.activeTextures.set(key, texture);\n        return texture;\n    }\n\n    createTextures(settings) {\n        try {\n            for (const [key, textureSettings] of Object.entries(settings.textures)) {\n                const descriptor = {\n                    label: textureSettings.label || key,\n                    size: textureSettings.size || {\n                        width: settings.canvas.width,\n                        height: settings.canvas.height,\n                        depthOrArrayLayers: 1\n                    },\n                    format: textureSettings.format || this.presentationFormat,\n                    usage: textureSettings.usage || (\n                        GPUTextureUsage.TEXTURE_BINDING |\n                        GPUTextureUsage.RENDER_ATTACHMENT |\n                        GPUTextureUsage.COPY_SRC |\n                        GPUTextureUsage.COPY_DST\n                    ),\n                    sampleCount: textureSettings.sampleCount || 1,\n                };\n\n                this.createTexture(key, descriptor);\n            }\n        } catch (error) {\n            console.error('Error creating textures:', error);\n            throw error;\n        }\n    }\n\n    copyTextureToTexture(commandEncoder, source, destination, dimensions) {\n        const sourceTexture = this.activeTextures.get(source);\n        const destTexture = this.activeTextures.get(destination);\n\n        if (!sourceTexture || !destTexture) {\n            throw new Error('Source or destination texture not found');\n        }\n\n        if (commandEncoder) {\n            commandEncoder.copyTextureToTexture(\n                { texture: sourceTexture },\n                { texture: destTexture },\n                dimensions\n            );\n        } else {\n            const encoder = this.device.createCommandEncoder();\n            encoder.copyTextureToTexture(\n                { texture: sourceTexture },\n                { texture: destTexture },\n                dimensions\n            );\n            this.device.queue.submit([encoder.finish()]);\n        }\n    }\n\n    releaseTexture(key) {\n        const texture = this.activeTextures.get(key);\n        if (texture) {\n            this.texturePool.release(texture);\n            this.activeTextures.delete(key);\n        }\n    }\n\n    getTexture(key) {\n        try {\n\n            const texture = this.activeTextures.get(key);\n            return texture;\n\n        } catch (error) {\n            console.error(`Error getting texture \"${key}\" not found. Available textures keys include: ${texture}, ${Array.from(this.activeTextures.keys()).join(', ')}:`, error);\n            throw error;\n        }\n    }\n\n    async copyImageToTexture(image, textureKey, dimensions) {\n        try {\n            const canvas = document.createElement('canvas');\n            canvas.width = dimensions.width;\n            canvas.height = dimensions.height;\n            const ctx = canvas.getContext('2d');\n            ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n            const imageBitmap = await createImageBitmap(canvas);\n\n            const texture = this.getTexture(textureKey);\n            this.device.queue.copyExternalImageToTexture(\n                { source: imageBitmap, flipY: false },\n                { texture },\n                dimensions\n            );\n        } catch (error) {\n            console.error(`Failed to copy image to texture ${textureKey}`, error);\n            throw error;\n        }\n    }\n\n    async destroyTextures() {\n        // Release all active textures back to pool\n        for (const [key] of this.activeTextures) {\n            this.releaseTexture(key);\n        }\n\n        // Destroy the pool itself\n        this.texturePool.destroy();\n    }\n\n}\n\nexport default TextureManager;","class BindingManager {\n    constructor(app) {\n        this.device = app.device;\n        this.textureManager = app.textureManager;\n        this.filters = app.filters;\n        this.bindGroupLayoutArray = [];\n        this.bindGroupArray = [];\n\n        // Reference the PipelineManager instead of directly accessing cacheManager\n        this.pipelineManager = app.pipelineManager;\n    }\n\n    createBindings(resource = null) {\n        const groupIndex = 0;\n        this.bindGroupLayoutArray[groupIndex] = [];\n        this.bindGroupArray[groupIndex] = [];\n\n        // Add sampler binding\n        this.bindGroupLayoutArray[groupIndex] = [{\n            binding: 0,\n            visibility: GPUShaderStage.FRAGMENT,\n            sampler: { type: 'filtering' }\n        }];\n\n        this.bindGroupArray[groupIndex] = [{\n            binding: 0,\n            resource: this.device.createSampler({\n                magFilter: 'linear',\n                minFilter: 'linear'\n            })\n        }];\n\n        // Add texture bindings based on max input texture length\n        const maxTextures = this.findMaxInputTextureLength();\n        for (let i = 0; i < maxTextures; i++) {\n            const bindingIndex = i + 1;\n\n            // Add to layout array\n            this.bindGroupLayoutArray[groupIndex].push({\n                binding: bindingIndex,\n                visibility: GPUShaderStage.FRAGMENT,\n                texture: { sampleType: 'float' }\n            });\n\n            // Add to bind group array\n            if (resource) {\n                this.bindGroupArray[groupIndex].push({\n                    binding: bindingIndex,\n                    resource: resource\n                });\n            }\n        }\n    }\n\n    createBindGroupLayout(groupIndex) {\n        return this.device.createBindGroupLayout({\n            entries: this.bindGroupLayoutArray[groupIndex]\n        });\n    }\n\n    createDynamicBindGroupEntries(filter, pass) {\n        const visibility = filter.type === 'compute' ?\n            GPUShaderStage.COMPUTE : GPUShaderStage.FRAGMENT;\n\n        const entries = [{\n            binding: 0,\n            visibility,\n            sampler: { type: 'filtering' }\n        }];\n\n        // Add texture bindings\n        if (pass.inputTexture?.length) {\n            pass.inputTexture.forEach((_, index) => {\n                entries.push({\n                    binding: index + 1,\n                    visibility,\n                    texture: { sampleType: 'float' }\n                });\n            });\n        }\n\n        // Add buffer binding if needed\n        if (filter.bufferAttachment?.bindings) {\n            entries.push({\n                binding: filter.bufferAttachment.bindingIndex || 3,\n                visibility,\n                buffer: {\n                    type: filter.type === 'compute' ? 'storage' : 'uniform'\n                }\n            });\n        }\n\n        return entries;\n    }\n\n    createDynamicBindGroup(layout, filter, pass, bufferResource) {\n        try {\n            const entries = [{\n                binding: 0,\n                resource: this.device.createSampler({\n                    magFilter: 'linear',\n                    minFilter: 'linear'\n                })\n            }];\n\n            if (pass.inputTexture?.length) {\n                for (let i = 0; i < pass.inputTexture.length; i++) {\n                    const textureName = pass.inputTexture[i];\n                    const textureView = this.textureManager.getTexture(textureName)?.createView();\n                    if (!textureView) {\n                        this.throwError(\n                            'TextureError',\n                            `Texture \"${textureName}\" not found. Available textures: ${Array.isArray(pass.inputTexture) ? pass.inputTexture.join(', ') : 'none'}`\n                        );\n                    }\n                    entries.push({\n                        binding: i + 1,\n                        resource: textureView\n                    });\n                }\n            }\n\n            if (filter.bufferAttachment?.bindings && bufferResource?.buffer) {\n                entries.push({\n                    binding: filter.bufferAttachment.bindingIndex || 3,\n                    resource: {\n                        buffer: bufferResource.buffer,\n                        offset: 0,\n                        size: bufferResource.buffer.size\n                    }\n                });\n            }\n\n            return this.device.createBindGroup({ layout, entries });\n        } catch (error) {\n            console.error(\n                'BindGroupError',\n                `Failed to create bind group for filter ${filter.label}`,\n                error\n            );\n         throw error;\n        }\n    }\n\n    findMaxInputTextureLength() {\n        let maxLength = 0;\n        Object.values(this.filters).forEach(filter => {\n            filter.passes.forEach(pass => {\n                if (Array.isArray(pass.inputTexture)) {\n                    maxLength = Math.max(maxLength, pass.inputTexture.length);\n                }\n            });\n        });\n        return maxLength;\n    }\n\n    getBindGroupArray() {\n        return this.bindGroupArray;\n    }\n\n    _generateLayoutKey(filter, pass) {\n        // Ensure we have access to a hash function even if pipelineManager isn't available\n        const hashString = (str) => {\n            let hash = 0;\n            for (let i = 0; i < str.length; i++) {\n                const char = str.charCodeAt(i);\n                hash = ((hash << 5) - hash) + char;\n                hash = hash & hash;\n            }\n            return hash.toString(36);\n        };\n\n        const keyComponents = {\n            type: filter.type,\n            inputTextureCount: pass.inputTexture?.length || 0,\n            hasBuffer: !!filter.bufferAttachment?.bindings,\n            bufferType: filter.type === 'compute' ? 'storage' : 'uniform',\n            bindingIndex: filter.bufferAttachment?.bindingIndex\n        };\n\n        // Use pipelineManager's hash function if available, otherwise use local implementation\n        const hashFunction = this.pipelineManager?.pipelineCacheManager?._hashString || hashString;\n        return hashFunction(JSON.stringify(keyComponents));\n    }\n\n    async updateFilterInputTexture(filterKey, passIndex, bindingIndex, textureKey, textureIndex, filters) {\n        const filter = filters[filterKey];\n        \n        if (!filter) {\n            throw new Error(\n                'FilterError',\n                `Filter \"${filterKey}\" not found`\n            );\n        }\n\n        const pass = filter.passes[passIndex];\n        \n        if (!pass) {\n            if (passIndex === null) {\n                throw new Error(\n                    'FilterError',\n                    `passIndex \"${passIndex}\" not found`\n                );\n            }\n\n            throw new Error(\n                'FilterError',\n                `Pass ${passIndex} not found in filter \"${filterKey}\"`\n            );\n        }\n\n        // Update input texture array\n        if (Array.isArray(textureKey)) {\n            pass.inputTexture = textureKey;\n        } else {\n            pass.inputTexture[textureIndex] = textureKey;\n        }\n\n        const groupIndex = filter.bufferAttachment.groupIndex;\n\n        // Generate cache key for layout\n        const layoutKey = this._generateLayoutKey(filter, pass);\n        let bindGroupLayout;\n\n        // Try to get cached layout if pipeline manager is available\n        let cachedLayout = this.pipelineManager?.pipelineCacheManager?.layoutCache.get(layoutKey);\n\n        if (cachedLayout?.layout && !cachedLayout.layout.destroyed) {\n            bindGroupLayout = cachedLayout.layout;\n            if (this.pipelineManager?.pipelineCacheManager) {\n                this.pipelineManager.pipelineCacheManager.stats.layoutsReused++;\n            }\n        } else {\n            // Create new layout if not in cache or invalid\n            const layoutEntries = this.createDynamicBindGroupEntries(filter, pass);\n            bindGroupLayout = this.device.createBindGroupLayout({\n                entries: layoutEntries\n            });\n\n            // Cache the new layout if pipeline manager is available\n            if (this.pipelineManager?.pipelineCacheManager) {\n                this.pipelineManager.pipelineCacheManager.layoutCache.set(layoutKey, {\n                    layout: bindGroupLayout,\n                    entries: layoutEntries,\n                    metadata: {\n                        createdAt: Date.now(),\n                        type: filter.type,\n                        lastUsed: Date.now()\n                    }\n                });\n                this.pipelineManager.pipelineCacheManager.stats.layoutsCreated++;\n            }\n        }\n\n        // Create new bind group\n        const bindGroup = this.createDynamicBindGroup(\n            bindGroupLayout,\n            filter,\n            pass,\n            filter.resources\n        );\n\n        // Update the bindings\n        this.bindGroupLayoutArray[groupIndex] = bindGroupLayout.entries;\n        pass.bindGroup[groupIndex] = bindGroup;\n\n        // Update cache metadata if available\n        if (cachedLayout && this.pipelineManager?.pipelineCacheManager) {\n            cachedLayout.metadata.lastUsed = Date.now();\n        }\n    }\n\n    /**\n * Set up bindings for a specific filter\n * @param {string} filterKey - The key of the filter\n * @param {object} filter - The filter object\n */\nsetupFilterBindings(filterKey, filter) {\n    if (!filter || !filter.passes) return;\n    \n    console.log(`Setting up bindings for filter: ${filterKey}`);\n    \n    // Process each pass in the filter\n    for (const pass of filter.passes) {\n      if (!pass.active) continue;\n      \n      // Skip passes that already have bind groups\n      if (pass.bindGroup && pass.bindGroup[0]) continue;\n      \n      console.log(`Creating bind group for pass: ${pass.label}`);\n      \n      // Make sure we have pipeline and entries\n      if (!pass.pipeline) {\n        console.error(`No pipeline available for pass: ${pass.label}`);\n        continue;\n      }\n      \n      if (!pass.bindGroupEntries) {\n        console.warn(`No bind group entries for pass: ${pass.label}, creating empty entries`);\n        pass.bindGroupEntries = [];\n      }\n      \n      // Create bind group from pipeline layout\n      try {\n        pass.bindGroup = [this.app.device.createBindGroup({\n          layout: pass.pipeline.getBindGroupLayout(0),\n          entries: pass.bindGroupEntries\n        })];\n        console.log(`Successfully created bind group for pass: ${pass.label}`);\n      } catch (error) {\n        console.error(`Failed to create bind group for pass: ${pass.label}:`, error);\n      }\n    }\n  }\n  \n}\n\nexport default BindingManager;","export class FilterManager {\n    constructor(app) {\n        this.app = app;\n\n        this.animationFrameId = null;\n        this.renderCompleteCallbacks = new Map();\n        this.renderCompleteCounter = 0;  // For unique IDs in waitForRenderComplete\n\n        // Add frame timing control\n        this.lastFrameTime = 0;\n        this.frameInterval = 1000 / 60; // 60 FPS target\n\n        this.histogramNeedsUpdate = false;\n        this.autoThresholdEnabled = false;\n\n        // Reference useful properties from the core renderer\n        this.debug = app.debug || false;\n        this.debugLogger = app.debugLogger;\n\n        // For convenience, create direct references to frequently used objects\n        this.filters = app.filters;\n        this.canvas = app.canvas;\n\n    }\n\n\n    /**\n    * Execute the filter for the given pass\n    * @param {object} pass - The pass object to execute.\n    * @param {string} type - The type of pass to execute.\n    * @returns {Promise<boolean>}\n    */\n    async executeFilterPass(pass, type) {\n\n        // Guard against undefined pass or label\n        if (!pass) {\n            console.error('Pass is undefined in executeFilterPass');\n            return false;\n        }\n\n        const passLabel = pass.label || 'unnamed pass';\n\n        // Validate pass bindings\n        if (!pass.bindGroup || !pass.bindGroup[0]) {\n            console.error(`Pass bindGroup is missing: ${passLabel}`);\n            return false;\n        }\n\n        const bindGroupArray = this.app.bindingManager.getBindGroupArray();\n        if (!bindGroupArray[0]) {\n            console.error('BindGroupArray[0] is missing');\n            return false;\n        }\n\n        if (this.debug) {\n            this.debugLogger.log('FilterExecution', `Executing ${type} pass:`, {\n                label: pass.label,\n                inputTextures: pass.inputTexture,\n                outputTexture: pass.outputTexture\n            });\n        }\n\n        // Debug texture state before execution\n        if (pass.label.includes('debug')) {  // Add debug flag to passes you want to track\n            console.log(`Executing ${pass.label}`);\n            console.log('Input textures:', pass.inputTexture);\n            console.log('Output texture:', pass.outputTexture);\n            this.app.textureManager.debugTextures();\n        }\n\n        if (!pass.bindGroup || !bindGroupArray[0]) {\n            console.error('No bind group available for pass:', pass.label);\n            return false;\n        }\n\n        const { outputTexture, pipeline } = pass;\n\n        if (type === 'compute') {\n            // Get histogram filter and validate\n            const histogramFilter = this.filters.histogramCompute;\n\n            if (!histogramFilter?.resources?.buffer) {\n                throw new Error('Histogram buffer not initialized');\n            }\n\n            const sourceBuffer = histogramFilter.resources.buffers?.histogram ||\n                histogramFilter.resources.buffer;\n\n            // Clear the combinedBuffer before rewriting to is using it\n            await this.clearBuffer(sourceBuffer);\n\n            this.app.commandQueue.addComputePass({\n                label: `Compute pass for ${pass.label}`,\n                descriptor: {\n                    label: `Compute pass for ${pass.label}`\n                },\n                commands: (computePass) => {\n                    computePass.setPipeline(pipeline);\n                    computePass.setBindGroup(0, pass.bindGroup[0]);\n\n                    const workgroupSizeX = 16;\n                    const workgroupSizeY = 16;\n                    const dispatchX = Math.ceil(this.canvas.width / workgroupSizeX);\n                    const dispatchY = Math.ceil(this.canvas.height / workgroupSizeY);\n\n                    computePass.dispatchWorkgroups(dispatchX, dispatchY);\n                }\n            });\n        }\n        else {\n            // Check if context is valid before proceeding\n            if (!this.app.context) {\n                console.error('WebGPU context is undefined');\n\n                if (!this.app.context) {\n                    return false; // Still no context, can't proceed\n                }\n            }\n\n            // If we're writing to the same texture we're reading from, use a temporary texture\n            const shouldUseTemp = pass.inputTexture.includes(outputTexture);\n            const finalOutputTexture = shouldUseTemp ? 'textureTemp' : outputTexture;\n\n            // Debug texture selection\n            if (pass.label.includes('debug')) {\n                console.log('Should use temp:', shouldUseTemp);\n                console.log('Final output texture:', finalOutputTexture);\n            }\n\n            // Safely access getCurrentTexture with null check\n            let resolveTargetView;\n            try {\n                resolveTargetView = finalOutputTexture ?\n                    this.app.textureManager.getTexture(finalOutputTexture).createView() :\n                    this.app.context.getCurrentTexture().createView();\n            } catch (err) {\n                console.error('Error getting texture view:', err);\n                return false;\n            }\n\n            this.app.commandQueue.addRenderPass({\n                label: `Render pass for ${pass.label}`,\n                descriptor: {\n                    colorAttachments: [{\n                        view: this.app.textureManager.getTexture('textureMASS').createView(),\n                        resolveTarget: resolveTargetView,\n                        loadOp: 'clear',\n                        storeOp: 'store',\n                        clearValue: [0, 0, 0, 0]\n                    }]\n                },\n                commands: (renderPass) => {\n                    renderPass.setViewport(0, 0, this.canvas.width, this.canvas.height, 0, 1);\n                    renderPass.setPipeline(pipeline);\n                    renderPass.setBindGroup(0, pass.bindGroup[0]);\n                    renderPass.setVertexBuffer(0, this.app.positionBuffer);\n                    renderPass.setVertexBuffer(1, this.app.texCordBuffer);\n                    renderPass.draw(3);\n                }\n            });\n\n            // If we used a temporary texture, copy it to the final destination\n            if (shouldUseTemp && outputTexture) {\n                this.app.commandQueue.addTextureCopy({\n                    label: `Copy temp to ${outputTexture}`,\n                    source: { texture: this.app.textureManager.getTexture('textureTemp') },\n                    destination: { texture: this.app.textureManager.getTexture(outputTexture) },\n                    copySize: {\n                        width: this.canvas.width,\n                        height: this.canvas.height,\n                        depthOrArrayLayers: 1\n                    }\n                });\n            }\n\n            // Flush commands if this is the final pass\n            if (outputTexture === undefined) {\n                await this.app.commandQueue.flush();\n                return true;\n            }\n\n            return false;\n        }\n    }\n    async renderFilterPasses(filter) {\n        let breakLoop = false;\n\n        // Skip processing if filter doesn't have valid passes\n        if (!filter || !filter.passes || !Array.isArray(filter.passes)) {\n            console.warn('Invalid filter or filter passes in renderFilterPasses');\n            return false;\n        }\n\n        // loop through the passes\n        for (const pass of filter.passes) {\n            if (pass && pass.active && pass.bindGroup && pass.bindGroup[0]) {\n                breakLoop = await this.executeFilterPass(pass, filter.type);\n            }\n            else if (pass && pass.active) {\n                console.warn(`Skipping active pass with missing bind group: ${pass.label || 'unnamed'}`);\n            }\n\n            if (breakLoop) {\n                break;\n            }\n        }\n        return breakLoop;\n    }\n    async updateFilters(filterUpdateConditions = false) {\n        for (const [key, filter] of Object.entries(this.filters)) {\n            if (!filter?.active) continue;\n\n            if (filterUpdateConditions.filters.includes(filter.label)) {\n\n                if (filter.needsRender) {\n\n                    if (filter.label === filterUpdateConditions.histogram) {\n                        this.histogramNeedsUpdate = true;\n                    }\n\n                    const breakLoop = await this.renderFilterPasses(filter);\n                    filter.needsRender = false;\n\n                    if (breakLoop) return true;\n                }\n            } else {\n                const breakLoop = await this.renderFilterPasses(filter);\n                if (breakLoop) return true;\n            }\n        }\n        return false;\n    }\n    onContextRecovered(device, context) {\n        // Reset any cached state\n        this.pendingUpdates = new Set();\n        this.throttledUpdates = new Map();\n\n        // Store references to new device/context\n        this.app.device = device;\n        this.app.context = context;\n\n        // Schedule any necessary updates\n        this.scheduleUpdate('contextRecovered');\n    }\n\n    updateFilterInputTexture(filterKey, passIndex, bindingIndex, textureKey, textureIndex) {\n        this.app.bindingManager.updateFilterInputTexture(\n            filterKey,\n            passIndex,\n            bindingIndex,\n            textureKey,\n            textureIndex,\n            this.filters\n        );\n    }\n    waitForRenderComplete() {\n        let id = this.renderCompleteCounter++;\n        //console.log(`Waiting for render complete: ${id}`);\n        return new Promise(resolve => {\n            this.renderCompleteCallbacks.set(id, resolve);\n            // Set timeout to prevent infinite waiting\n            setTimeout(() => {\n                if (this.renderCompleteCallbacks.has(id)) {\n                    console.warn(\"Render completion timeout triggered\");\n                    this.renderCompleteCallbacks.delete(id);\n                    resolve(); // Resolve anyway to prevent hanging promises\n                }\n            }, 30000); // 30 seconds timeout\n        });\n    }\n    async clearBuffer(buffer) {\n        // Create a temporary buffer to clear the buffer\n        const tempBuffer = this.app.device.createBuffer({\n            size: buffer.size,\n            usage: GPUBufferUsage.COPY_SRC,\n            mappedAtCreation: true\n        });\n\n        // Fill the temporary buffer with zeros\n        new Uint8Array(tempBuffer.getMappedRange()).fill(0);\n        tempBuffer.unmap();\n\n        // Create a command encoder\n        const commandEncoder = this.app.device.createCommandEncoder();\n\n        // Copy the temporary buffer to the buffer to clear it\n        commandEncoder.copyBufferToBuffer(tempBuffer, 0, buffer, 0, buffer.size);\n\n        // Submit the commands\n        const commandBuffer = commandEncoder.finish();\n        this.app.device.queue.submit([commandBuffer]);\n    }\n\n    async updateOutputCanvas(drawToCanvas, transformations, filterUpdateConditions) {\n\n        try {\n            await this.renderFrame(drawToCanvas, transformations, filterUpdateConditions);\n        } catch (error) {\n            console.error('Render error:', error);\n            this.stopRender();\n        }\n\n    }\n\n    async renderFrame(drawToCanvas, transformations, filterUpdateConditions) {\n        const currentTime = performance.now();\n        const deltaTime = currentTime - this.lastFrameTime;\n\n        // Skip frame if not enough time has elapsed\n        if (deltaTime < this.frameInterval) {\n            //console.log(\"Scheduling next frame due to deltaTime 1\");\n            this.scheduleNextFrame(drawToCanvas, transformations, filterUpdateConditions);\n            return;\n        }\n\n        // Update filters and check if we should continue rendering\n        const breakLoop = await this.updateFilters(filterUpdateConditions);\n\n        // Update histogram if needed\n        if (breakLoop && this.histogramNeedsUpdate && !this.app.videoProcessor?.isProcessingVideo) {\n            await this.app.updateHistogram();\n            this.histogramNeedsUpdate = false;\n        }\n\n        // Draw the frame\n        this.drawFrame(drawToCanvas, transformations);\n\n        // Update timing\n        this.lastFrameTime = currentTime;\n\n        // Handle render completion or schedule next frame\n        if (breakLoop) {\n            this.completeRender();\n        } else {\n            this.scheduleNextFrame(drawToCanvas, transformations, filterUpdateConditions);\n        }\n    }\n\n    drawFrame(drawToCanvas, transformations) {\n        const { canvas, ctx } = drawToCanvas;\n\n        // Update canvas dimensions\n        canvas.width = this.canvas.width;\n        canvas.height = this.canvas.height;\n\n        // Apply transformations and draw\n        ctx.setTransform(\n            transformations._layerScale, 0,\n            0, transformations._layerScale,\n            transformations._x, transformations._y\n        );\n\n        ctx.drawImage(this.canvas, 0, 0, canvas.width, canvas.height);\n    }\n\n    scheduleNextFrame(drawToCanvas, transformations, filterUpdateConditions) {\n        if (this.animationFrameId) {\n            cancelAnimationFrame(this.animationFrameId);\n        }\n\n        this.animationFrameId = requestAnimationFrame(() => {\n            this.updateOutputCanvas(drawToCanvas, transformations, filterUpdateConditions);\n        });\n    }\n\n    completeRender() {\n        this.stopRender();\n        this.notifyRenderComplete();\n    }\n\n    stopRender() {\n        if (this.animationFrameId) {\n            cancelAnimationFrame(this.animationFrameId);\n            this.animationFrameId = null;\n        }\n        this.app.isRendering = false;\n    }\n\n    notifyRenderComplete() {\n        for (const [id, callback] of this.renderCompleteCallbacks.entries()) {\n            callback();\n            this.renderCompleteCallbacks.delete(id);\n        }\n    }\n\n}\n\nexport default FilterManager;","class Histogram {\n    static calculateStatistics(histogram) {\n        if (!histogram || histogram.length === 0) {\n            return { median: null, min: null, max: null, mean: null, total: 0 };\n        }\n\n        const total = histogram.reduce((sum, freq) => sum + freq, 0);\n        if (total === 0) {\n            return { median: null, min: null, max: null, mean: null, total: 0 };\n        }\n\n        let min = null;\n        let max = null;\n        let sum = 0;\n        let medianValue = null;\n        const half = total / 2;\n        let cumulativeFrequency = 0;\n\n        // First pass: find min, max, and calculate sum for mean\n        for (let i = 0; i < histogram.length; i++) {\n            if (histogram[i] > 0) {\n                if (min === null) min = i;\n                max = i;\n                sum += i * histogram[i];\n            }\n        }\n\n        // Second pass: find median\n        for (let i = 0; i < histogram.length; i++) {\n            cumulativeFrequency += histogram[i];\n            if (cumulativeFrequency >= half && medianValue === null) {\n                // Interpolate for more accurate median\n                const prevCumulative = cumulativeFrequency - histogram[i];\n                const fraction = (half - prevCumulative) / histogram[i];\n                medianValue = i + fraction;\n            }\n        }\n\n        return {\n            median: medianValue,\n            min,\n            max,\n            mean: sum / total,\n            total,\n            normalizedHistogram: histogram.map(value => value / total)\n        };\n    }\n\n    /**\n     * Updates histogram data and triggers callback if present\n     * @param {WebGpuRenderer} renderer - The WebGPU renderer instance\n     * @returns {Promise<Object|null>} Histogram statistics\n     */\n    static async updateHistogram(renderer) {\n        try {\n            const stats = await this.readAndAnalyzeHistogram(renderer);\n            if (stats && renderer.onHistogramUpdate) {\n                renderer.onHistogramUpdate(stats);\n            }\n            return stats;\n        } catch (error) {\n            console.error('Error updating histogram:', error);\n            return null;\n        }\n    }\n\n    /**\n     * Reads the histogram values from the GPU buffer\n     * @param {WebGpuRenderer} renderer - The WebGPU renderer instance\n     * @returns {Promise<number[]>} Array of histogram values\n     */\n    static async readHistogramValues(renderer) {\n        // Get histogram filter and validate\n        const histogramFilter = renderer.filters.histogramCompute;\n\n        if (!histogramFilter?.resources?.buffer) {\n            console.warn('Histogram buffer not initialized, recreating resources');\n\n            if (histogramFilter && !histogramFilter.resources) {\n                histogramFilter.resources = await renderer.pipelineManager.createFilterPipeline(histogramFilter);\n\n                if (!histogramFilter?.resources?.buffer) {\n                    throw new Error('Histogram buffer could not be recreated');\n                }\n            }\n        }\n\n        try {\n            const sourceBuffer = histogramFilter.resources.buffers?.histogram ||\n                histogramFilter.resources.buffer;\n\n            // Create buffer for reading data\n            const readBackBuffer = renderer.device.createBuffer({\n                size: 256 * Float32Array.BYTES_PER_ELEMENT,\n                usage: GPUBufferUsage.MAP_READ | GPUBufferUsage.COPY_DST,\n                label: 'Histogram ReadBack Buffer'\n            });\n\n            // Create and execute command encoder\n            const commandEncoder = renderer.device.createCommandEncoder({\n                label: 'Read Histogram Values'\n            });\n\n            commandEncoder.copyBufferToBuffer(\n                sourceBuffer,\n                0,\n                readBackBuffer,\n                0,\n                256 * Float32Array.BYTES_PER_ELEMENT\n            );\n\n            renderer.device.queue.submit([commandEncoder.finish()]);\n\n            // Map and read the data\n            await readBackBuffer.mapAsync(GPUMapMode.READ);\n            const mappedRange = readBackBuffer.getMappedRange();\n            const histogramData = new Uint32Array(mappedRange);\n\n            // Copy the data to a regular array\n            const histogram = Array.from(histogramData);\n\n            // Cleanup\n            readBackBuffer.unmap();\n            readBackBuffer.destroy();\n\n            return histogram;\n        } catch (error) {\n            console.error('Error reading histogram values, possible invalid buffer:', error);\n\n            if (error.message && error.message.includes('Invalid Buffer')) {\n                console.warn('Detected invalid buffer, triggering resource recreation');\n                await renderer.createResources(renderer.imageArray[renderer.imageIndex]?.type === 'Video');\n            }\n\n            throw error;\n        }\n    }\n\n    /**\n     * Reads and analyzes histogram data from the GPU\n     * @param {WebGpuRenderer} renderer - The WebGPU renderer instance\n     * @returns {Promise<Object|null>} Histogram statistics\n     */\n    static async readAndAnalyzeHistogram(renderer) {\n        try {\n            const histogramFilter = renderer.filters.histogramCompute;\n            if (!histogramFilter?.resources?.buffer) {\n                throw new Error('Histogram buffer not initialized');\n            }\n\n            const histogramData = await this.readHistogramValues(renderer);\n\n            if (!histogramData || histogramData.length === 0) {\n                console.warn('No histogram data received');\n                return null;\n            }\n\n            const stats = this.calculateStatistics(histogramData);\n            stats.rawHistogram = histogramData;\n\n            if (renderer.debug) {\n                console.log('Histogram Statistics:', {\n                    min: stats.min !== null ? stats.min / 255 : null,\n                    max: stats.max !== null ? stats.max / 255 : null,\n                    median: stats.median !== null ? stats.median / 255 : null,\n                    mean: stats.mean !== null ? stats.mean / 255 : null,\n                    total: stats.total\n                });\n            }\n\n            return stats;\n        } catch (error) {\n            console.error('Error analyzing histogram:', error);\n            throw error;\n        }\n    }\n}\n\nexport default Histogram","class CommandQueueManager {\n    constructor(device) {\n        this.device = device;\n        this.pendingCommands = [];\n        this.activeEncoder = null;\n        this.isRecording = false;\n\n        // Simplified configuration\n        this.maxBatchSize = 100;  // Maximum commands per batch\n    }\n\n    beginRecording() {\n        if (this.isRecording) return;\n\n        this.isRecording = true;\n        this.activeEncoder = this.device.createCommandEncoder();\n    }\n\n    addCommand(command) {\n        if (!this.isRecording) {\n            this.beginRecording();\n        }\n\n        try {\n            command(this.activeEncoder);\n            this.pendingCommands.push(command);\n\n            // Auto-flush if batch size limit reached\n            if (this.pendingCommands.length >= this.maxBatchSize) {\n                this.flush();\n            }\n        } catch (error) {\n            console.error('Error executing command:', error);\n            throw error;\n        }\n    }\n\n    addRenderPass(params) {\n        this.addCommand(encoder => {\n            const renderPass = encoder.beginRenderPass(params.descriptor);\n            params.commands(renderPass);\n            renderPass.end();\n        });\n    }\n\n    addComputePass(params) {\n        this.addCommand(encoder => {\n            const computePass = encoder.beginComputePass(params.descriptor);\n            params.commands(computePass);\n            computePass.end();\n        });\n    }\n\n    addTextureCopy(params) {\n        this.addCommand(encoder => {\n            encoder.copyTextureToTexture(\n                params.source,\n                params.destination,\n                params.copySize\n            );\n        });\n    }\n\n    addBufferCopy(params) {\n        this.addCommand(encoder => {\n            encoder.copyBufferToBuffer(\n                params.source,\n                params.sourceOffset || 0,\n                params.destination,\n                params.destinationOffset || 0,\n                params.size\n            );\n        });\n    }\n\n    async flush() {\n        try {\n            if (!this.isRecording || this.pendingCommands.length === 0) {\n                return Promise.resolve();\n            }\n\n            const commandBuffer = this.activeEncoder.finish();\n            this.device.queue.submit([commandBuffer]);\n\n            this.pendingCommands = [];\n            this.activeEncoder = null;\n            this.isRecording = false;\n\n            return this.device.queue.onSubmittedWorkDone();\n        } catch (error) {\n            console.error('Failed to flush command queue', error);\n            throw error;\n        }\n    }\n\n    dispose() {\n        if (this.pendingCommands.length > 0) {\n            this.flush().catch(console.error);\n        }\n    }\n}\n\nexport default CommandQueueManager","class SettingsValidator {\n    static validateSettings(settings) {\n        if (!settings.presentationFormat) throw new Error('Presentation format is required.');\n        if (!settings.textures) throw new Error('Textures are required.');\n        if (!settings.filters) throw new Error('Filters are required.');\n\n        this.validatePresentationFormat(settings.presentationFormat);\n        this.validateTextures(settings.textures);\n        this.validateFilters(settings.filters);\n    }\n\n    static validatePresentationFormat(format) {\n        const validFormats = ['rgba8unorm', 'rgba8unorm-srgb', 'bgra8unorm', 'rgba16float'];\n        if (!validFormats.includes(format)) {\n            throw new Error(`Invalid presentation format: ${format}`);\n        }\n    }\n\n    static validateTextures(textures) {\n        if (!textures || Object.keys(textures).length === 0) {\n            throw new Error('No textures defined in settings');\n        }\n\n        for (const [key, texture] of Object.entries(textures)) {\n            // Validate required properties\n            if (!texture.label) {\n                throw new Error(`Texture ${key} missing required label property`);\n            }\n\n            // Validate format if specified\n            if (texture.format) {\n                this.validateTextureFormat(key, texture.format);\n            }\n\n            // Validate usage flags if specified\n            if (texture.usage) {\n                this.validateTextureUsage(key, texture.usage);\n            }\n\n            // Validate sample count if specified\n            if (texture.sampleCount !== undefined) {\n                this.validateSampleCount(key, texture.sampleCount);\n            }\n\n            // Validate size if specified\n            if (texture.size) {\n                this.validateTextureSize(key, texture.size);\n            }\n        }\n    }\n\n    static validateTextureFormat(textureKey, format) {\n        const validFormats = [\n            // Standard color formats\n            'rgba8unorm',\n            'rgba8unorm-srgb',\n            'rgba8snorm',\n            'rgba16float',\n            'rgba32float',\n            'bgra8unorm',\n            'bgra8unorm-srgb',\n        ];\n\n        if (!validFormats.includes(format)) {\n            throw new Error(\n                'ValidationError',\n                `Invalid texture format '${format}' for texture '${textureKey}'. ` +\n                `Valid formats are: ${validFormats.join(', ')}`\n            );\n        }\n    }\n\n    static validateTextureUsage(textureKey, usage) {\n        const validUsageFlags = {\n            COPY_SRC: GPUTextureUsage.COPY_SRC,\n            COPY_DST: GPUTextureUsage.COPY_DST,\n            TEXTURE_BINDING: GPUTextureUsage.TEXTURE_BINDING,\n            STORAGE_BINDING: GPUTextureUsage.STORAGE_BINDING,\n            RENDER_ATTACHMENT: GPUTextureUsage.RENDER_ATTACHMENT\n        };\n\n        // Check if usage is a valid combination of flags\n        let validCombination = false;\n        let usedFlags = [];\n\n        // Check each flag\n        for (const [flagName, flagValue] of Object.entries(validUsageFlags)) {\n            if (usage & flagValue) {\n                usedFlags.push(flagName);\n                validCombination = true;\n            }\n        }\n\n        if (!validCombination) {\n            throw new Error(\n                `Invalid usage flags for texture '${textureKey}'. ` +\n                `No valid usage flags found. Must include at least one of: ${Object.keys(validUsageFlags).join(', ')}`\n            );\n        }\n\n        // Validate specific combinations\n        if ((usage & GPUTextureUsage.STORAGE_BINDING) && (usage & GPUTextureUsage.RENDER_ATTACHMENT)) {\n            throw new Error(\n                `Invalid usage combination for texture '${textureKey}': ` +\n                'STORAGE_BINDING cannot be combined with RENDER_ATTACHMENT'\n            );\n        }\n\n        // Log used flags for debugging\n        console.debug(`Texture '${textureKey}' uses flags: ${usedFlags.join(', ')}`);\n    }\n\n    static validateSampleCount(textureKey, sampleCount) {\n        const validSampleCounts = [1, 4];\n\n        if (!validSampleCounts.includes(sampleCount)) {\n            throw new Error(\n                `Invalid sample count '${sampleCount}' for texture '${textureKey}'. ` +\n                `Valid sample counts are: ${validSampleCounts.join(', ')}`\n            );\n        }\n    }\n\n    static validateTextureSize(textureKey, size) {\n        // Validate width\n        if (!Number.isInteger(size.width) || size.width <= 0 || size.width > 16384) {\n            throw new Error(\n                `Invalid width '${size.width}' for texture '${textureKey}'. ` +\n                'Width must be a positive integer not exceeding 16384'\n            );\n        }\n\n        // Validate height\n        if (!Number.isInteger(size.height) || size.height <= 0 || size.height > 16384) {\n            throw new Error(\n                `Invalid height '${size.height}' for texture '${textureKey}'. ` +\n                'Height must be a positive integer not exceeding 16384'\n            );\n        }\n\n        // Validate depthOrArrayLayers if specified\n        if (size.depthOrArrayLayers !== undefined) {\n            if (!Number.isInteger(size.depthOrArrayLayers) || size.depthOrArrayLayers <= 0 || size.depthOrArrayLayers > 2048) {\n                throw new Error(\n                    `Invalid depthOrArrayLayers '${size.depthOrArrayLayers}' for texture '${textureKey}'. ` +\n                    'Must be a positive integer not exceeding 2048'\n                );\n            }\n        }\n\n    }\n\n    static isPowerOf2(value) {\n        return value > 0 && (value & (value - 1)) === 0;\n    }\n\n    static validateFilters(filters) {\n        Object.entries(filters).forEach(([key, filter]) => {\n            const requiredKeys = ['active', 'passes', 'bufferAttachment'];\n            const missingKeys = requiredKeys.filter(k => !filter.hasOwnProperty(k));\n\n            if (missingKeys.length > 0) {\n                throw new Error(`Filter \"${key}\" missing required keys: ${missingKeys.join(', ')}`);\n            }\n\n            this.validateFilterPasses(key, filter.passes);\n            this.validateBufferAttachment(key, filter.bufferAttachment);\n        });\n    }\n\n    static validateFilterPasses(filterKey, passes) {\n        if (!Array.isArray(passes)) {\n            throw new Error(`Passes for filter \"${filterKey}\" must be an array`);\n        }\n\n        passes.forEach((pass, index) => {\n            const requiredKeys = ['inputTexture', 'shaderURL'];\n            const missingKeys = requiredKeys.filter(k => !pass.hasOwnProperty(k));\n\n            if (missingKeys.length > 0) {\n                throw new Error(\n                    `Pass ${index} in filter \"${filterKey}\" missing required keys: ${missingKeys.join(', ')}`\n                );\n            }\n\n            if (!Array.isArray(pass.inputTexture)) {\n                throw new Error(\n                    `InputTexture in pass ${index} of filter \"${filterKey}\" must be an array`\n                );\n            }\n        });\n    }\n\n    static validateBufferAttachment(filterKey, attachment) {\n        if (attachment) {\n            if (attachment.groupIndex === undefined) {\n                throw new Error(`Filter \"${filterKey}\" buffer attachment missing groupIndex`);\n            }\n\n            // Check for reserved binding indices\n            if (attachment.bindingIndex !== undefined) {\n                if (attachment.groupIndex === 0 && (attachment.bindingIndex === 0 || attachment.bindingIndex === 1)) {\n                    throw new Error(\n                        `Invalid binding configuration in filter \"${filterKey}\": ` +\n                        'group index 0 and binding indices 0 and 1 are reserved'\n                    );\n                }\n            }\n\n            // Validate bindings if they exist\n            if (attachment.bindings) {\n                this.validateBindings(filterKey, attachment.bindings);\n            }\n        }\n    }\n\n    static validateBindings(filterKey, bindings) {\n        Object.entries(bindings).forEach(([bindingKey, binding]) => {\n            if (!binding.type) {\n                throw new Error(\n                    `Binding \"${bindingKey}\" in filter \"${filterKey}\" missing required type property`\n                );\n            }\n            if (binding.value === undefined) {\n                throw new Error(\n                    `Binding \"${bindingKey}\" in filter \"${filterKey}\" missing required value property`\n                );\n            }\n        });\n    }\n}\n\nexport default SettingsValidator;","class RecoveryManager {\n    constructor(app) {\n        this.app = app;\n        this.isRecovering = false;\n        this.recoveryAttempts = 0;\n        this.maxRecoveryAttempts = 5;\n        this.retryDelay = 5000; // 5 seconds between recovery attempts\n        this.overlayElement = null;\n        this.statusElement = null;\n        this.progressInterval = null;\n        this.recoveryListeners = new Set();\n\n        // Listen for uncaptured errors from the device\n        this._setupDeviceErrorListener();\n    }\n\n    /**\n     * Set up error listener on the device to auto-trigger recovery\n     * @private\n     */\n    _setupDeviceErrorListener() {\n        if (this.app && this.app.device) {\n            this.app.device.addEventListener('uncapturederror', (event) => {\n                console.error('WebGPU device error:', event.error);\n\n                // If this is a device lost error, trigger recovery\n                if (event.error.constructor.name === 'GPUDeviceLostInfo') {\n                    console.warn('Device explicitly reported as lost, initiating recovery');\n                    this.startRecovery();\n                }\n            });\n        }\n    }\n\n    /**\n     * Add a recovery listener to be notified when recovery completes\n     * @param {Function} listener - Callback function when recovery completes\n     */\n    addRecoveryListener(listener) {\n        if (typeof listener === 'function') {\n            this.recoveryListeners.add(listener);\n        }\n    }\n\n    /**\n     * Remove a recovery listener\n     * @param {Function} listener - Listener to remove\n     */\n    removeRecoveryListener(listener) {\n        this.recoveryListeners.delete(listener);\n    }\n\n    /**\n     * Notify all recovery listeners\n     * @param {boolean} success - Whether recovery was successful\n     * @param {Error} error - Error object if recovery failed\n     * @private\n     */\n    _notifyListeners(success, error = null) {\n        this.recoveryListeners.forEach(listener => {\n            try {\n                listener(success, error);\n            } catch (e) {\n                console.error('Error in recovery listener:', e);\n            }\n        });\n    }\n\n    /**\n     * Start the recovery process\n     */\n    async startRecovery() {\n        if (this.isRecovering) {\n            console.log('Recovery already in progress, ignoring request');\n            return;\n        }\n\n        this.isRecovering = true;\n        this.recoveryAttempts++;\n\n        try {\n            // Create blocking overlay first to prevent user interaction\n            this.overlayElement = this._createBlockingOverlay(true);\n\n            // Create or update recovery notification with custom message\n            this.statusElement = this._createRecoveryStatusElement(\n                '<h3 style=\"margin: 0 0 10px 0; font-size: 28px;\">WebGPU Recovery</h3>' +\n                '<p style=\"margin-bottom: 20px; font-size: 18px;\">Recovering graphics context...</p>' +\n                '<div style=\"width: 100%; height: 8px; margin-top: 15px; background: #222; border-radius: 4px; overflow: hidden;\">' +\n                '<div id=\"recovery-progress\" style=\"width: 0%; height: 100%; background: linear-gradient(90deg, #0f6, #0c9); border-radius: 4px; transition: width 0.3s ease-in-out;\"></div></div>',\n                'recovery'\n            );\n\n            // Add a pulsing animation\n            this._addPulsingAnimation();\n\n            // Simulate progress updates during recovery\n            let progress = 0;\n            const progressEl = document.getElementById('recovery-progress');\n            this.progressInterval = setInterval(() => {\n                progress += 5;\n                if (progressEl && progress <= 90) {\n                    progressEl.style.width = `${progress}%`;\n                }\n            }, 2000);\n\n            console.log('Attempting to recover WebGPU context...');\n\n            // Stop any active rendering to prevent further errors\n            this.isRendering = false;\n\n            // Clean up resources but don't mark as disposed yet\n            await this._cleanupResources();\n\n            // Update progress message\n            if (this.statusElement) this.statusElement.querySelector('p').textContent = 'Requesting new WebGPU adapter...';\n\n            // Get a new adapter and device\n            await this._recreateAdapterAndDevice();\n\n            // Update progress message\n            if (this.statusElement) this.statusElement.querySelector('p').textContent = 'Reconfiguring context...';\n\n            // Reconfigure context with new device\n            await this._reconfigureContext();\n\n            // Update progress message\n            if (this.statusElement) this.statusElement.querySelector('p').textContent = 'Recreating resources...';\n\n            // Recreate essential managers and resources\n            await this._recreateResources();\n\n            // Fix any filters that might have invalid state\n            this._validateAndFixFilters();\n\n            // Notify the RenderManager that context has been recovered\n            this._recoveryNotification();\n\n            // Complete progress\n            if (progressEl) progressEl.style.width = '100%';\n            this._clearProgressInterval();\n\n            // Update status with success styling\n            this._showSuccessMessage();\n\n            // Reset recovery attempts on success\n            this.recoveryAttempts = 0;\n            this.isRecovering = false;\n\n            // Notify listeners of successful recovery\n            this._notifyListeners(true);\n\n            return true;\n        } catch (error) {\n            console.error('Context recovery failed:', error);\n\n            // Clear progress interval if it exists\n            this._clearProgressInterval();\n\n            // Update status indicator with error\n            this._showErrorMessage(error);\n\n            // Don't remove overlay on failure - keep it until the retry succeeds or user refreshes the page\n\n            // Notify listeners of failed recovery\n            this._notifyListeners(false, error);\n\n            // Check if we should retry\n            if (this.recoveryAttempts < this.maxRecoveryAttempts) {\n                console.log(`Recovery attempt ${this.recoveryAttempts} failed. Retrying in ${this.retryDelay / 1000} seconds...`);\n\n                // Set a timeout to retry recovery after a delay\n                setTimeout(() => {\n                    console.log('Retrying recovery...');\n                    this.isRecovering = false; // Reset flag to allow retry\n                    this.startRecovery();\n                }, this.retryDelay);\n            } else {\n                console.error(`Max recovery attempts (${this.maxRecoveryAttempts}) reached. Recovery failed.`);\n                // Show fatal error message\n                this._showFatalErrorMessage();\n                this.isRecovering = false;\n            }\n\n            return false;\n        }\n    }\n\n    /**\n     * Show fatal error message when max recovery attempts are reached\n     * @private\n     */\n    _showFatalErrorMessage() {\n        if (this.statusElement) {\n            this.statusElement.style.backgroundColor = 'rgba(120, 0, 0, 0.9)';\n            this.statusElement.innerHTML = '<h3 style=\"margin: 0 0 10px 0;\">WebGPU Recovery Failed</h3>' +\n                '<p>Maximum recovery attempts reached.</p>' +\n                '<p>Please refresh the page or restart your browser.</p>' +\n                '<button id=\"refresh-page-btn\" style=\"margin-top: 15px; padding: 8px 16px; background: #fff; border: none; border-radius: 4px; cursor: pointer; font-weight: bold;\">Refresh Page</button>';\n\n            // Add refresh button handler\n            setTimeout(() => {\n                const refreshBtn = document.getElementById('refresh-page-btn');\n                if (refreshBtn) {\n                    refreshBtn.addEventListener('click', () => {\n                        window.location.reload();\n                    });\n                }\n            }, 0);\n        }\n    }\n\n    /**\n     * Clean up WebGPU resources before recovery\n     * @private\n     */\n    async _cleanupResources() {\n        try {\n            await this.app.waitForGPU();\n            await this.app.cleanupResources('bindGroups');\n            await this.app.cleanupResources('pipelines');\n            await this.app.cleanupResources('textures');\n            await this.app.cleanupResources('buffers');\n        } catch (error) {\n            console.warn('Error during resource cleanup:', error);\n            // Continue recovery process despite cleanup errors\n        }\n    }\n\n    /**\n     * Recreate adapter and device\n     * @private\n     */\n    async _recreateAdapterAndDevice() {\n        // Get a new adapter\n        this.app.adapter = await navigator.gpu.requestAdapter({\n            powerPreference: 'high-performance',\n            forceFallbackAdapter: false\n        });\n\n        if (!this.app.adapter) {\n            throw new Error('Could not acquire WebGPU adapter during recovery');\n        }\n\n        // Create new device\n        this.app.device = await this.app.adapter.requestDevice();\n\n        // Set up error handler for the new device\n        this.app.device.addEventListener('uncapturederror', (event) => {\n            console.error('WebGPU device error:', event.error);\n            if (event.error.constructor.name === 'GPUDeviceLostInfo') {\n                console.warn('Device explicitly reported as lost, initiating recovery');\n                this.startRecovery();\n            }\n        });\n    }\n\n    /**\n     * Reconfigure WebGPU context\n     * @private\n     */\n    async _reconfigureContext() {\n        if (this.app.context) {\n            try {\n                this.app.context.unconfigure();\n            } catch (e) {\n                console.warn('Error unconfiguring context:', e);\n            }\n\n            this.app.context.configure({\n                device: this.app.device,\n                format: this.app.presentationFormat,\n                alphaMode: 'premultiplied',\n                size: {\n                    width: this.app.canvas.width,\n                    height: this.app.canvas.height\n                }\n            });\n        }\n    }\n\n    /**\n     * Recreate managers and resources\n     * @private\n     */\n    async _recreateResources() {\n        try {\n            // First, fully clean up any remaining buffers that might still be referenced\n            await this.app.cleanupResources('bindGroups');\n            await this.app.cleanupResources('pipelines');\n            await this.app.cleanupResources('textures');\n            await this.app.cleanupResources('buffers');\n\n            // Clear all resource tracking sets\n            for (const type in this.app.resources) {\n                this.app.resources[type].clear();\n            }\n\n            // Reset managers to null to ensure we don't keep any references to old device\n            this.app.textureManager = null;\n            this.app.bindingManager = null;\n            this.app.bufferManager = null;\n            this.app.pipelineManager = null;\n            this.app.commandQueue = null;\n\n            // Create new device\n            await this.app.setupDevice();\n\n            // Recreate resources from scratch with the new device\n            const isVideo = this.app.imageArray[this.app.imageIndex]?.type === 'Video';\n\n            // Make sure we reload the image/video before recreating resources\n            if (isVideo) {\n                if (!this.app.videoProcessor) {\n                    this.app.videoProcessor = new VideoProcessor(this.app);\n                    await this.app.videoProcessor.initializeVideo(this.app.imageArray[this.app.imageIndex].filePath);\n                }\n            } else {\n                // Reload the image\n                let response = await fetch(this.app.imageArray[this.app.imageIndex].filePath);\n                let blob = await response.blob();\n                let url = URL.createObjectURL(blob);\n                await this.app.loadImageSource(url);\n            }\n\n            // Now create all resources with the new device\n            await this.app.createResources(isVideo);\n\n            console.log('Resources recreated successfully with new device');\n        } catch (error) {\n            console.error('Error in _recreateResources:', error);\n            throw error;\n        }\n    }\n\n    /**\n     * Validate and fix filters after recovery\n     * @private\n     */\n    _validateAndFixFilters() {\n        let needsRebuild = false;\n\n        // Check all filters and passes for validity\n        for (const [key, filter] of Object.entries(this.app.filters)) {\n            if (!filter.passes || !Array.isArray(filter.passes)) {\n                console.warn(`Filter ${key} has invalid passes array`);\n                continue;\n            }\n\n            for (const pass of filter.passes) {\n                // Skip inactive passes\n                if (!pass.active) continue;\n\n                // Check if pass needs its bind group recreated\n                if (!pass.bindGroup || !pass.bindGroup[0] || !pass.pipeline) {\n                    console.log(`Fixing invalid bind group for pass: ${pass.label || 'unnamed'}`);\n                    needsRebuild = true;\n\n                    // If pipeline exists but bind group doesn't, try to rebuild just the bind group\n                    if (pass.pipeline && this.app.bindingManager) {\n                        try {\n                            // Create temporary bind group using pipeline layout\n                            const tempBindGroup = this.app.device.createBindGroup({\n                                layout: pass.pipeline.getBindGroupLayout(0),\n                                entries: [\n                                    {\n                                        binding: 0,\n                                        resource: this.app.device.createSampler({\n                                            magFilter: 'linear',\n                                            minFilter: 'linear'\n                                        })\n                                    },\n                                    // Add a basic texture binding\n                                    {\n                                        binding: 1,\n                                        resource: this.app.textureManager.getTexture('texture').createView()\n                                    }\n                                ]\n                            });\n\n                            // Set temporary bind group\n                            pass.bindGroup = [tempBindGroup];\n                            console.log(`Created temporary bind group for ${pass.label || 'unnamed'} pass`);\n                        } catch (error) {\n                            console.warn(`Could not create temporary bind group: ${error.message}`);\n                        }\n                    }\n                }\n            }\n        }\n\n        return needsRebuild;\n    }\n\n    /**\n     * Notify renderManager about successful recovery\n     * @private\n     */\n    _recoveryNotification() {\n        if (this.app) {\n            if (typeof this.app.handleContextRecovery === 'function') {\n                // Call the handler method on RenderManager\n                this.app.handleContextRecovery();\n                console.log('Notified RenderManager about context recovery');\n            }\n            else{\n                console.warn('App \"handleContextRecovery\" fuction not available for notification');\n            }\n        } else {\n            console.warn('\"App\" not available for notification');\n        }\n    }\n\n    /**\n     * Clear progress interval\n     * @private\n     */\n    _clearProgressInterval() {\n        if (this.progressInterval) {\n            clearInterval(this.progressInterval);\n            this.progressInterval = null;\n        }\n    }\n\n    /**\n     * Show success message after recovery\n     * @private\n     */\n    _showSuccessMessage() {\n        if (this.statusElement) {\n            this.statusElement.style.backgroundColor = 'rgb(10, 160, 10)';\n            this.statusElement.style.boxShadow = '0 0 10px rgba(128, 128, 128, 0.5)';\n            this.statusElement.innerHTML = '<h3 style=\"margin: 0 0 10px 0;\">WebGPU Recovery</h3>' +\n                '<p>GPU Context Successfully Recovered!</p>';\n\n            // Remove pulsing animation\n            this.statusElement.style.animation = 'none';\n\n            // Auto-hide after a few seconds\n            setTimeout(() => {\n                if (this.statusElement) {\n                    this.statusElement.style.opacity = '0';\n                    // Remove overlay when status message fades out\n                    if (this.overlayElement) this.overlayElement.style.opacity = '0';\n\n                    // Remove both elements from DOM after fade out\n                    setTimeout(() => {\n                        // Remove style element\n                        const styleEl = document.getElementById('recovery-animation');\n                        if (styleEl) styleEl.parentNode.removeChild(styleEl);\n\n                        // Remove overlay\n                        if (this.overlayElement && this.overlayElement.parentNode) {\n                            this.overlayElement.parentNode.removeChild(this.overlayElement);\n                            this.overlayElement = null;\n                        }\n\n                        // Status element will be removed by the calling code\n                        this.statusElement = null;\n                    }, 500);\n                }\n            }, 1000);\n        }\n    }\n\n    /**\n     * Show error message when recovery fails\n     * @param {Error} error - The error that caused recovery to fail\n     * @private\n     */\n    _showErrorMessage(error) {\n        if (this.statusElement) {\n            this.statusElement.style.backgroundColor = 'rgba(220, 53, 69, 0.9)';\n            this.statusElement.innerHTML = '<h3 style=\"margin: 0 0 10px 0;\">WebGPU Recovery Failed</h3>' +\n                `<p>${error.message || 'Unknown error occurred'}</p>` +\n                `<p style=\"margin-top: 10px;\">Retrying in ${this.retryDelay / 1000} seconds... (Attempt ${this.recoveryAttempts}/${this.maxRecoveryAttempts})</p>`;\n        }\n    }\n\n    /**\n     * Add pulsing animation to status element\n     * @private\n     */\n    _addPulsingAnimation() {\n        const pulseAnimation = `@keyframes pulse {\n            0% { box-shadow: 0 0 0 0 rgba(255, 0, 0, 0.7); }\n            70% { box-shadow: 0 0 0 15px rgba(255, 0, 0, 0); }\n            100% { box-shadow: 0 0 0 0 rgba(255, 0, 0, 0); }\n        }`;\n\n        const style = document.createElement('style');\n        style.id = 'recovery-animation';\n        style.innerHTML = pulseAnimation;\n        document.head.appendChild(style);\n\n        if (this.statusElement) {\n            this.statusElement.style.animation = 'pulse 1.5s infinite';\n        }\n    }\n\n    /**\n     * Create a blocking overlay\n     * @param {boolean} show - Whether to show or hide the overlay\n     * @returns {HTMLElement} The overlay element\n     * @private\n     */\n    _createBlockingOverlay(show = true) {\n        // Remove existing overlay if it exists\n        let overlayEl = document.getElementById('recovery-overlay');\n        if (overlayEl) {\n            overlayEl.remove();\n        }\n\n        if (!show) return null;\n\n        // Create new overlay\n        overlayEl = document.createElement('div');\n        overlayEl.id = 'recovery-overlay';\n\n        // Style the overlay to cover the entire screen\n        overlayEl.style.position = 'fixed';\n        overlayEl.style.top = '0';\n        overlayEl.style.left = '0';\n        overlayEl.style.width = '100%';\n        overlayEl.style.height = '100%';\n        overlayEl.style.backgroundColor = 'rgba(240, 240, 240, 0.5)';\n        overlayEl.style.backdropFilter = 'blur(3px)';\n        overlayEl.style.zIndex = '9999'; // Below the status but above everything else\n        overlayEl.style.display = 'flex';\n        overlayEl.style.justifyContent = 'center';\n        overlayEl.style.alignItems = 'center';\n        overlayEl.style.transition = 'opacity 0.3s ease';\n\n        document.body.appendChild(overlayEl);\n        return overlayEl;\n    }\n\n    /**\n     * Create recovery status element\n     * @param {string} message - Optional message to display\n     * @param {string} status - Optional status (success, warning, error, recovery)\n     * @param {Error|string} errorDetails - Optional error object or message for error\n     * @returns {HTMLElement} The recovery status element\n     * @private\n     */\n    _createRecoveryStatusElement(message = '', status = 'hidden', errorDetails = null) {\n        // Remove existing element if it exists\n        let statusEl = document.getElementById('recovery-status');\n        if (statusEl) {\n            statusEl.remove();\n        }\n\n        // Create new element\n        statusEl = document.createElement('div');\n        statusEl.id = 'recovery-status';\n\n        // Base styling\n        statusEl.style.position = 'fixed';\n        statusEl.style.top = '50%';\n        statusEl.style.left = '50%';\n        statusEl.style.transform = 'translate(-50%, -50%)';\n        statusEl.style.padding = '20px 30px';\n        statusEl.style.borderRadius = '8px';\n        statusEl.style.zIndex = '10000';\n        statusEl.style.textAlign = 'center';\n        statusEl.style.fontFamily = 'Arial, sans-serif';\n        statusEl.style.fontSize = '24px';\n        statusEl.style.transition = 'all 0.3s ease';\n        statusEl.style.boxShadow = '0 5px 15px rgba(0, 0, 0, 0.3)';\n        statusEl.style.minWidth = '300px';\n\n        // Status-specific styling\n        if (status === 'error') {\n            statusEl.style.backgroundColor = 'rgba(220, 53, 69, 0.9)';\n            statusEl.style.color = '#fff';\n            // Use provided message or generate default error message\n            if (!message) {\n                const errorMsg = errorDetails ?\n                    (errorDetails.message || errorDetails.toString() || 'Unknown error occurred') :\n                    'Unknown error occurred';\n\n                message = '<h3 style=\"margin: 0 0 10px 0;\">WebGPU Recovery Failed</h3>' +\n                    `<p>${errorMsg}</p>` +\n                    `<p style=\"margin-top: 10px;\">Retrying in ${this.retryDelay / 1000} seconds...</p>`;\n            }\n        } else if (status === 'warning') {\n            statusEl.style.backgroundColor = 'rgba(255, 193, 7, 0.9)';\n            statusEl.style.color = '#212529';\n            if (!message) {\n                message = '<h3 style=\"margin: 0 0 10px 0;\">WebGPU Warning</h3>' +\n                    '<p>Performance may be affected</p>';\n            }\n        } else if (status === 'success') {\n            statusEl.style.backgroundColor = 'rgba(40, 167, 69, 0.9)';\n            statusEl.style.color = '#fff';\n            if (!message) {\n                message = '<h3 style=\"margin: 0 0 10px 0;\">Success</h3>' +\n                    '<p>Operation completed successfully</p>';\n            }\n        } else if (status === 'recovery') {\n            statusEl.style.backgroundColor = 'rgba(0, 0, 0, 0.8)';\n            statusEl.style.color = '#fff';\n            if (!message) {\n                message = '<h3 style=\"margin: 0 0 10px 0;\">WebGPU Recovery</h3>' +\n                    '<p>Recovering from GPU context loss...</p>' +\n                    '<div style=\"width: 100%; height: 4px; margin-top: 15px; background: #333;\">' +\n                    '<div id=\"recovery-progress\" style=\"width: 0%; height: 100%; background: #0f6\"></div></div>';\n            }\n        } else {\n            // Hidden or default style\n            statusEl.style.backgroundColor = 'rgba(0, 0, 0, 0.7)';\n            statusEl.style.color = '#fff';\n            statusEl.style.opacity = '0';\n            statusEl.style.pointerEvents = 'none';\n        }\n\n        // Set content\n        if (message) {\n            statusEl.innerHTML = message;\n        } else {\n            statusEl.innerHTML = '<h3 style=\"margin: 0 0 10px 0;\">WebGPU Status</h3>' +\n                '<p>Ready</p>';\n        }\n\n        document.body.appendChild(statusEl);\n        return statusEl;\n    }\n\n    /**\n     * Create a test button for manual recovery testing\n     * @returns {HTMLElement} The test button\n     */\n    createTestButton() {\n        let testButton = document.getElementById('test-webgpu-recovery');\n\n        if (testButton) {\n            testButton.remove();\n        }\n\n        testButton = document.createElement('button');\n        testButton.id = 'test-webgpu-recovery';\n        testButton.innerText = 'Test WebGPU Recovery';\n        testButton.style.position = 'absolute';\n        testButton.style.top = '10px';\n        testButton.style.right = '10px';\n        testButton.style.zIndex = '9999';\n        testButton.style.backgroundColor = 'white';\n        testButton.style.border = '1px solid black';\n        testButton.style.padding = '5px 10px';\n\n        testButton.addEventListener('click', async () => {\n            console.log(\"Manual device recovery test initiated\");\n\n            // Forcibly destroy the device to simulate loss\n            if (this.app.device) {\n                console.log(\"Destroying WebGPU device to simulate loss...\");\n                this.app.device.destroy();\n\n                // Start recovery process\n                await this.startRecovery();\n            }\n        });\n\n        document.body.appendChild(testButton);\n        return testButton;\n    }\n}\n\nexport default RecoveryManager","class DebugLogger {\n    constructor(enabled = false) {\n        this.enabled = enabled;\n        this.loggers = new Map();\n    }\n\n    setEnabled(enabled) {\n        this.enabled = enabled;\n    }\n\n    log(component, message, data = null) {\n        if (!this.enabled) return;\n\n        const timestamp = new Date().toISOString();\n        const logMessage = `[${timestamp}] [${component}] ${message}`;\n\n        if (data) {\n            console.log(logMessage, data);\n        } else {\n            console.log(logMessage);\n        }\n    }\n\n    warn(component, message, data = null) {\n        if (!this.enabled) return;\n\n        const timestamp = new Date().toISOString();\n        const logMessage = `[${timestamp}] [${component}] ⚠️ ${message}`;\n\n        if (data) {\n            console.warn(logMessage, data);\n        } else {\n            console.warn(logMessage);\n        }\n    }\n\n    error(component, message, error = null) {\n        // Always log errors, regardless of debug setting\n        const timestamp = new Date().toISOString();\n        const logMessage = `[${timestamp}] [${component}] 🚫 ${message}`;\n\n        if (error) {\n            console.error(logMessage, error);\n        } else {\n            console.error(logMessage);\n        }\n    }\n}\n\nexport default DebugLogger","import PipelineManager from './pipelineManager.js';\nimport BufferManager from './bufferManager.js';\nimport TextureManager from './textureManager.js';\nimport BindingManager from './bindingManager.js';\nimport FilterManager from \"./FilterManager.js\";\nimport Histogram from \"./histogram.js\";\nimport CommandQueueManager from \"./commandQueueManager.js\";\nimport SettingsValidator from './settingsValidator.js';\nimport RecoveryManager from \"./recoveryManager.js\";\nimport DebugLogger from \"./debugLogger.js\";\n\n\nexport class WebGpuRenderer {\n   constructor(settings) {\n\n      // ESSENTIAL SETTINGS BELOW\n      this.imageIndex = settings.imageIndex;\n      this.imageArray = settings.imageArray;\n\n      this.presentationFormat = settings.presentationFormat || navigator.gpu.getPreferredCanvasFormat(); // Default format\n\n      this.textures = { ...settings.textures };\n\n      // Add default textures if not provided\n      this._setupDefaultTextures();\n\n      this.filters = settings.filters;\n\n      // Validate settings before proceeding\n      try {\n         SettingsValidator.validateSettings(settings);\n      } catch (error) {\n         console.error('Settings validation failed:', error.message);\n         throw error;\n      }\n      this.textureManager = null; // Will be initialized after device setup\n      this.bufferManager = null; // Will be initialized after device setup\n      this.pipelineManager = null; // Will be initialized after device setup\n      this.bindingManager = null; // Will be initialized after device setup\n      this.filterManager = null; // Will be initialized after device setup\n      this.commandQueue = null; // Will be initialized after device setup\n      this.videoProcessor = null; // Will be initialized after device setup\n\n\n      this.canvas = document.createElement('canvas');\n      this.canvas.width = 800;\n      this.canvas.height = 800;\n      this.canvas.id = 'webgpu-canvas';\n      this.canvas.style.display = 'none';\n      this.context = undefined;\n\n      this.ratio = 1.0;\n      this.image = {\n         width: 0,\n         height: 0,\n      };\n\n      // Add resource tracking\n      this.resources = {\n         buffers: new Set(),\n         textures: new Set(),\n         bindGroups: new Set(),\n         pipelines: new Set()\n      };\n\n      this.isDisposed = false; // Add disposal flag\n\n      this.debug = settings.debug || false;\n      // DEBUG\n      // Only enable in development/debug mode\n      this.debugLogger = new DebugLogger(settings.debug);\n      // Example debug log\n      if (settings.debug) {\n         this.debugLogger.log('App', 'Initializing with settings:', settings);\n      };\n      // Modify the monitoring interval\n      if (settings.debug) {\n         this.monitoringInterval = setInterval(() => {\n            this.debugLogger.log('Performance', 'Current Stats', {\n               pipelineCache: this.pipelineManager?.getCacheStats(),\n               commandQueue: this.commandQueue?.stats\n            });\n         }, 10000);\n      };\n\n      // Add disposal event listeners\n      window.addEventListener('beforeunload', this._cleanup.bind(this));\n\n   }\n\n   /**\n     * Setup default textures required for rendering pipeline\n     * @private\n     */\n   _setupDefaultTextures() {\n      // Setup primary texture for input image\n      if (!this.textures.texture) {\n         this.textures.texture = {\n            copyImageTo: true,\n            label: 'texture',\n            notes: 'Primary texture for the input image/video frame. DO NOT WRITE OVER IT',\n         };\n      }\n\n      // Setup multi-sample texture for anti-aliasing\n      if (!this.textures.textureMASS) {\n         this.textures.textureMASS = {\n            label: 'textureMASS',\n            notes: 'Texture used by colorAttachments in renderPass for Multi Sampling',\n            usage: GPUTextureUsage.RENDER_ATTACHMENT | GPUTextureUsage.TEXTURE_BINDING,\n            sampleCount: 4,\n         };\n      }\n\n      // Setup temporary texture for intermediate processing\n      if (!this.textures.textureTemp) {\n         this.textures.textureTemp = {\n            label: 'textureTemp',\n            notes: 'Temporary texture for output before copying back to the input texture',\n         };\n      }\n   }\n\n   /**\n    * Clean up resources on page unload\n    * @private\n    */\n   async _cleanup() {\n      try {\n         if (!this.isDisposed) {\n            await this.dispose();\n         }\n      } catch (error) {\n         console.error('Error during cleanup:', error);\n      }\n   }\n\n\n   /**\n    * Dispose of all resources and cleanup\n    */\n   async dispose() {\n      if (this.isDisposed) {\n         return;\n      }\n\n      try {\n         // Stop video processing\n         if (this.videoProcessor) {\n            this.videoProcessor.dispose();\n            this.videoProcessor = null;\n         }\n\n         // Clear command queue\n         if (this.commandQueue) {\n            await this.commandQueue.flush();\n            this.commandQueue.dispose();\n         }\n\n         // Wait for GPU operations\n         await this.waitForGPU();\n\n         // Clean up resources in order\n         await this.cleanupResources('bindGroups');\n         await this.cleanupResources('pipelines');\n         await this.cleanupResources('textures');\n         await this.cleanupResources('buffers');\n\n         // Clean up texture manager\n         if (this.textureManager) {\n            await this.textureManager.destroyTextures();\n         }\n\n         // Clean up vertex buffers\n         if (this.positionBuffer) {\n            this.positionBuffer.destroy();\n            this.positionBuffer = null;\n         }\n\n         if (this.texCordBuffer) {\n            this.texCordBuffer.destroy();\n            this.texCordBuffer = null;\n         }\n\n         // Clean up context and device\n         if (this.context) {\n            this.context.unconfigure();\n         }\n\n         if (this.device) {\n            this.device.destroy();\n         }\n\n         // Clean up pipeline manager\n         if (this.pipelineManager) {\n            this.pipelineManager.dispose();\n         }\n\n         // Clear all managers\n         this.textureManager = null;\n         this.bufferManager = null;\n         this.pipelineManager = null;\n         this.bindingManager = null;\n\n         // Clean up RecoveryManager\n         if (this.recoveryManager) {\n            this.recoveryManager._clearProgressInterval();\n\n            // Remove any UI elements\n            if (this.recoveryManager.overlayElement) {\n               this.recoveryManager.overlayElement.remove();\n               this.recoveryManager.overlayElement = null;\n            }\n\n            if (this.recoveryManager.statusElement) {\n               this.recoveryManager.statusElement.remove();\n               this.recoveryManager.statusElement = null;\n            }\n\n            this.recoveryManager = null;\n         }\n\n         this.isDisposed = true;\n\n         // Remove event listeners\n         window.removeEventListener('beforeunload', this._cleanup.bind(this));\n\n      } catch (error) {\n         console.error('Error during cleanup:', error);\n      }\n   }\n\n\n   trackResource(type, resource) {\n      if (this.resources[type]) {\n         this.resources[type].add(resource);\n      }\n   }\n\n   createTrackedBuffer(descriptor) {\n      const buffer = this.device.createBuffer(descriptor);\n      this.trackResource('buffers', buffer);\n      return buffer;\n   }\n\n   /**\n    * Clean up specific resources\n    * @param {string} type - Type of resources to clean up\n    * @private\n    */\n   async cleanupResources(type) {\n      if (this.resources[type]) {\n         for (const resource of this.resources[type]) {\n            try {\n               if (resource && !resource.destroyed) {\n                  if (typeof resource.destroy === 'function') {\n                     resource.destroy();\n                  }\n               }\n            } catch (error) {\n               console.warn(`Error destroying ${type} resource:`, error);\n            }\n         }\n         this.resources[type].clear();\n      }\n   }\n\n   /**\n    * Wait for the GPU to complete all pending operations\n    * @private\n    */\n   async waitForGPU() {\n      if (this.device) {\n         try {\n            await this.device.queue.onSubmittedWorkDone();\n         } catch (error) {\n            console.warn('Error waiting for GPU:', error);\n         }\n      }\n   }\n\n   // Reset the application state and resources\n   async reset() {\n      try {\n\n         // Store current filter values before disposing resources\n         const savedFilterValues = {};\n\n         // Recursively extract all properties with 'value' in filters\n         const extractValues = (obj, path = '') => {\n            for (const key in obj) {\n               if (obj[key] && typeof obj[key] === 'object') {\n                  // If this property has a 'value' attribute, save it\n                  if (obj[key].hasOwnProperty('value')) {\n                     const fullPath = path ? `${path}.${key}` : key;\n                     savedFilterValues[fullPath] = obj[key].value;\n                  }\n\n                  // Continue recursively exploring nested objects\n                  if (!Array.isArray(obj[key])) {\n                     extractValues(obj[key], path ? `${path}.${key}` : key);\n                  }\n               }\n            }\n         };\n\n         // Extract values from all filters\n         extractValues(this.filters);\n\n         //console.log('Saved filter values:', savedFilterValues);\n\n         // Dispose of current resources\n         await this.dispose();\n\n         let response = await fetch(this.imageArray[this.imageIndex].filePath);\n         let blob = await response.blob();\n         let url = URL.createObjectURL(blob);\n\n         await this.loadImageSource(url);\n         await this.setupDevice();\n         await this.createResources();\n\n         // Restore saved filter values\n         for (const key in savedFilterValues) {\n            try {\n               await this.updateFilterBuffer(key.split('.').pop(), savedFilterValues[key]);\n            } catch (err) {\n               console.warn(`Failed to restore filter value for ${key}:`, err);\n            }\n         }\n\n         this.isDisposed = false;\n      } catch (error) {\n         console.error('Error resetting app:', error);\n         throw error;\n      }\n   }\n\n   /**\n    * Load an image source (URL or Blob) into memory\n    * @param {string|Blob} source - Image source URL or Blob\n    * @returns {Promise<HTMLImageElement>} - Loaded image element\n    */\n   async loadImageSource(source) {\n      try {\n         // Create image and load it\n         const img = new Image();\n\n         return new Promise((resolve, reject) => {\n            img.onload = () => {\n               this.image = img;\n\n               // Revoke object URL if needed\n               if (typeof source !== 'string' || source.startsWith('blob:')) {\n                  URL.revokeObjectURL(source);\n               }\n\n               resolve(img);\n            };\n\n            img.onerror = (error) => reject(error);\n            img.src = source;\n         });\n      } catch (error) {\n         console.error(`Failed to load image source`, error);\n         throw error;\n      }\n   }\n\n\n   // Resize with proper resource cleanup\n   async resize(width, height, resetSize = false) {\n         try {\n             if (this.debug) {\n                 console.log('Resizing application from:', this.canvas.width, this.canvas.height, 'to:', width, height, resetSize);\n             }\n     \n             // Wait for GPU to complete pending work\n             await this.waitForGPU();\n     \n             // Check if video processor exists and if current file is video\n             let isVideo = this.imageArray[this.imageIndex].type === 'Video';\n     \n             // Store video state if it's a video\n             let videoState = null;\n             if (isVideo && this.videoProcessor?.videoElement) {\n                 videoState = {\n                     currentTime: this.videoProcessor.videoElement.currentTime,\n                     paused: this.videoProcessor.videoElement.paused\n                 };\n                 // Pause video during resize to prevent frame changes\n                 this.videoProcessor.videoElement.pause();\n             }\n     \n             // Get current dimensions based on source type\n             const currentWidth = isVideo ? this.videoProcessor.videoElement.videoWidth : this.image.width;\n             const currentHeight = isVideo ? this.videoProcessor.videoElement.videoHeight : this.image.height;\n     \n             // Calculate new ratio\n             if (!resetSize) {\n                 this.ratio = 1.0;\n             } else {\n                 let widthRatio = width / currentWidth;\n                 let heightRatio = height / currentHeight;\n                 this.ratio = Math.min(widthRatio, heightRatio);\n             }\n     \n             // Store cache state before resizing\n             if (this.pipelineManager) {\n                 const pipelineCacheState = this.pipelineManager.pipelineCacheManager.storeCacheState();\n     \n                 // Release all active textures back to the pool\n                 const activeTextureKeys = Array.from(this.textureManager.activeTextures.keys());\n                 for (const key of activeTextureKeys) {\n                     this.textureManager.releaseTexture(key);\n                 }\n     \n                 // Recreate resources\n                 await this.createResources(isVideo);\n     \n                 // Restore compatible cached items with new dimensions\n                 await this.pipelineManager.pipelineCacheManager.restoreCacheState(\n                     pipelineCacheState,\n                     {\n                         width: this.canvas.width,\n                         height: this.canvas.height\n                     }\n                 );\n             } else {\n                 // If no pipeline manager exists, just create resources\n                 await this.createResources(isVideo);\n             }\n     \n             // Restore video state if it was a video\n             if (videoState && this.videoProcessor?.videoElement) {\n                 this.videoProcessor.videoElement.currentTime = videoState.currentTime;\n                 if (!videoState.paused) {\n                     await this.videoProcessor.videoElement.play();\n                 }\n             }\n     \n             if (this.debug) {\n                 console.log('Resized canvas to:', this.canvas.width, this.canvas.height, resetSize);\n             }\n     \n             return true;\n         } catch (error) {\n             console.error('Failed to resize application:', error);\n             throw error;\n         }\n     }\n     \n   /**\n    * Create the position buffer and write the data to it\n    * The coordinates in the position buffer represent\n    * the positions of the vertices of a triangle in normalized device coordinates (NDC).\n    * These coordinates are used to draw the triangle in the WebGPU rendering pipeline.\n    * @returns {Promise<void>}\n    */\n   createPositionBuffer() {\n      // Create the bindings for both position and texture coordinates\n      this.bindingManager.createBindings(); // No resource needed yet\n\n      // Create tracked buffer\n      this.positionBuffer = this.createTrackedBuffer({\n         size: 24,\n         usage: GPUBufferUsage.VERTEX | GPUBufferUsage.COPY_DST,\n      });\n      // Fullscreen triangle\n      this.device.queue.writeBuffer(this.positionBuffer, 0, new Float32Array([\n         -1, -1, // x, y,\n         3, -1,  // x, y,\n         -1, 3   // x, y,\n      ]));\n   }\n\n   /**\n    * Create the texCord buffer and write the data to it\n    * the texCord buffer is used to draw the triangle and\n    * represent the texture coordinates for the vertices of a triangle.\n    * These coordinates are used to map the texture onto the triangle\n    * in the WebGPU rendering pipeline.\n    * @returns {Promise<void>}\n    */\n   createTexCordBuffer() {\n      const key = Object.keys(this.textures)\n         .find(key => this.textures[key].copyImageTo);\n      const resource = key ? this.textureManager.getTexture(key).createView() : undefined;\n\n      // Create tracked buffer\n      this.texCordBuffer = this.createTrackedBuffer({\n         size: 24,\n         usage: GPUBufferUsage.VERTEX | GPUBufferUsage.COPY_DST | GPUBufferUsage.COPY_SRC,\n      });\n      // Position and uvs for fullscreen triangle\n      this.device.queue.writeBuffer(this.texCordBuffer, 0, new Float32Array([\n         0, 1, // uvx, uvy\n         2, 1, // uvx, uvy\n         0, -1 // uvx, uvy\n      ]));\n   }\n\n      async updateHistogram() {\n         return Histogram.updateHistogram(this);\n     }\n\n   async setupDevice() {\n      try {\n\n         // Request adapter with more robust features\n         this.adapter = await navigator.gpu.requestAdapter({\n            powerPreference: 'high-performance',\n            forceFallbackAdapter: false\n         });\n\n         if (!this.adapter) {\n            throw new Error('No WebGPU adapter found');\n         }\n\n         // Request device with options that might help persistence\n         this.device = await this.adapter.requestDevice({\n            requiredFeatures: [\n               // Any features your app needs\n            ],\n            requiredLimits: {\n               // Any specific limits your app needs\n            }\n         });\n\n         if (this.imageArray[this.imageIndex]) {\n            let name = this.imageArray[this.imageIndex].name;\n            this.adapter.label = name;\n            this.device.label = name;\n         }\n\n         // Setup error handler\n         this.device.addEventListener('uncapturederror', (event) => {\n            console.error('WebGPU device error:', event.error);\n            if (event.error.constructor.name === 'GPUDeviceLostInfo') {\n               console.warn('Device explicitly reported as lost, initiating recovery');\n               this.recoverRenderContext();\n            }\n         });\n\n         this.textureManager = new TextureManager(this);\n         this.bindingManager = new BindingManager(this);\n         this.bufferManager = new BufferManager(this.device);\n         this.pipelineManager = new PipelineManager(this);\n         this.commandQueue = new CommandQueueManager(this.device);\n\n      }\n      catch (error) {\n         console.error(`Failed to setup device: ${error}`);\n      }\n   }\n\n   // Add this helper method to validate and fix filters after recovery\n   validateAndFixFilters() {\n      let needsRebuild = false;\n\n      // Check all filters and passes for validity\n      for (const [key, filter] of Object.entries(this.filters)) {\n         if (!filter.passes || !Array.isArray(filter.passes)) {\n            console.warn(`Filter ${key} has invalid passes array`);\n            continue;\n         }\n\n         for (const pass of filter.passes) {\n            // Skip inactive passes\n            if (!pass.active) continue;\n\n            // Check if pass needs its bind group recreated\n            if (!pass.bindGroup || !pass.bindGroup[0] || !pass.pipeline) {\n               //console.log(`Fixing invalid bind group for pass: ${pass.label || 'unnamed'}`);\n               needsRebuild = true;\n\n               // If pipeline exists but bind group doesn't, try to rebuild just the bind group\n               if (pass.pipeline && this.bindingManager) {\n                  try {\n                     // Create temporary bind group using pipeline layout\n                     const tempBindGroup = this.device.createBindGroup({\n                        layout: pass.pipeline.getBindGroupLayout(0),\n                        entries: [\n                           {\n                              binding: 0,\n                              resource: this.device.createSampler({\n                                 magFilter: 'linear',\n                                 minFilter: 'linear'\n                              })\n                           },\n                           // Add a basic texture binding - we'll get a more accurate one when filters run\n                           {\n                              binding: 1,\n                              resource: this.textureManager.getTexture('texture').createView()\n                           }\n                        ]\n                     });\n\n                     // Set temporary bind group\n                     pass.bindGroup = [tempBindGroup];\n                  } catch (error) {\n                     console.warn(`Could not create temporary bind group: ${error.message}`);\n                  }\n               }\n            }\n         }\n      }\n\n      return needsRebuild;\n   }\n\n   // Add this as a helper method to WebGpuRenderer\n   async safeQueueFlush() {\n      if (!this.commandQueue) {\n         console.warn('Cannot flush: Command queue is null');\n         return;\n      }\n\n      try {\n         // Check if there are any pending commands\n         if (this.commandQueue.pendingCommands &&\n            this.commandQueue.pendingCommands.length > 0) {\n            await this.commandQueue.flush();\n            console.log('Command queue flushed successfully');\n         } else {\n            console.log('No pending commands to flush');\n         }\n      } catch (error) {\n         console.error('Error flushing command queue:', error);\n      }\n   }\n\n   /**\n    * Creates a full-screen overlay to block UI interactions during recovery\n    * @param {boolean} show - Whether to show or hide the overlay\n    * @returns {HTMLElement} The blocking overlay element\n    */\n   createBlockingOverlay(show = true) {\n      // Remove existing overlay if it exists\n      let overlayEl = document.getElementById('recovery-overlay');\n      if (overlayEl) {\n         overlayEl.remove();\n      }\n\n      if (!show) return null;\n\n      // Create new overlay\n      overlayEl = document.createElement('div');\n      overlayEl.id = 'recovery-overlay';\n\n      // Style the overlay to cover the entire screen\n      overlayEl.style.position = 'fixed';\n      overlayEl.style.top = '0';\n      overlayEl.style.left = '0';\n      overlayEl.style.width = '100%';\n      overlayEl.style.height = '100%';\n      overlayEl.style.backgroundColor = 'rgba(240, 240, 240, 0.5)';\n      overlayEl.style.backdropFilter = 'blur(3px)';\n      overlayEl.style.zIndex = '9999'; // Below the status but above everything else\n      //overlayEl.style.cursor = 'not-allowed';\n      overlayEl.style.display = 'flex';\n      overlayEl.style.justifyContent = 'center';\n      overlayEl.style.alignItems = 'center';\n      overlayEl.style.transition = 'opacity 0.3s ease';\n\n      document.body.appendChild(overlayEl);\n      return overlayEl;\n   }\n\n   async recoverRenderContext() {\n      return this.recoveryManager.startRecovery();\n   }\n\n   /**\n    * Create resources with proper tracking\n    */\n   async createResources(isVideo = false) {\n      if (this.imageArray.length === 0) {\n         return;\n      }\n\n      // Determine if source is video\n      if (typeof isVideo !== 'boolean') {\n         const type = this.imageArray[this.imageIndex]?.type;\n         isVideo = type === 'Video';\n      }\n\n      // Get original dimensions\n      let originalWidth = isVideo ?\n         this.videoProcessor.videoElement.videoWidth : this.image.width;\n      let originalHeight = isVideo ?\n         this.videoProcessor.videoElement.videoHeight : this.image.height;\n\n      // Calculate scaled dimensions\n      let ratio = this.ratio || 1.0;\n\n      let scaledWidth = Math.floor(originalWidth * ratio);\n      let scaledHeight = Math.floor(originalHeight * ratio);\n\n      // Set canvas dimensions to scaled size\n      this.canvas.width = scaledWidth;\n      this.canvas.height = scaledHeight;\n\n      // Initialize WebGPU context\n      this.context = this.canvas.getContext('webgpu', { alpha: true });\n\n      if (!this.context) {\n         throw new Error('Failed to get WebGPU context');\n      }\n\n      if (!this.device) {\n         await this.setupDevice();\n      }\n\n      try {\n         // Configure context with scaled dimensions\n         this.context.configure({\n            device: this.device,\n            format: this.presentationFormat,\n            alphaMode: 'premultiplied',\n            size: {\n               width: scaledWidth,\n               height: scaledHeight\n            },\n         });\n\n         // Create textures with scaled dimensions\n         await this.textureManager.createTextures({\n            textures: this.textures,\n            canvas: {\n               width: scaledWidth,\n               height: scaledHeight\n            }\n         });\n\n         // Create a temporary canvas for scaling\n         const tempCanvas = document.createElement('canvas');\n         tempCanvas.width = scaledWidth;\n         tempCanvas.height = scaledHeight;\n         const tempCtx = tempCanvas.getContext('2d');\n         tempCtx.imageSmoothingQuality = 'high';\n\n         // Copy and scale initial frame/image\n         if (isVideo) {\n            // Draw the video frame onto the temporary canvas with scaling\n            tempCtx.drawImage(\n               this.videoProcessor.videoElement,\n               0, 0,\n               originalWidth, originalHeight,  // Source dimensions\n               0, 0,\n               scaledWidth, scaledHeight      // Destination dimensions\n            );\n\n            // Copy the scaled frame to the texture\n            await this.textureManager.copyImageToTexture(\n               tempCanvas,\n               'texture',\n               {\n                  width: scaledWidth,\n                  height: scaledHeight\n               }\n            );\n         } else {\n            // Handle still images\n            await this.textureManager.copyImageToTexture(\n               this.image,\n               'texture',\n               {\n                  width: scaledWidth,\n                  height: scaledHeight\n               }\n            );\n         }\n\n         // Create buffers and initialize managers\n         await this.createPositionBuffer();\n         await this.createTexCordBuffer();\n\n         // Create pipelines for all filters\n         for (const [, filter] of Object.entries(this.filters)) {\n            filter.resources = await this.pipelineManager.createFilterPipeline(filter);\n         }\n\n         if (this.debug) {\n            const cacheStats = this.pipelineManager.pipelineCacheManager.getCachePerformance();\n            console.log('Pipeline Cache Performance:', cacheStats);\n         }\n\n      } catch (error) {\n         console.error('Error creating resources:', error);\n         throw error;\n      }\n   }\n\n   /**\n    * Initialize the program\n    * @returns {Promise<{image: null}>}\n    */\n   async initialize() {\n      try {\n\n         // Validate settings before proceeding with initialization\n         SettingsValidator.validateSettings(this);\n\n         if (this.imageArray.length > 0 &&\n            this.imageArray[this.imageIndex]) {\n            let response = await fetch(this.imageArray[this.imageIndex].filePath);\n            let blob = await response.blob();\n            let url = URL.createObjectURL(blob);\n            await this.loadImageSource(url);\n         }\n\n         // Setup WebGPU device\n         await this.setupDevice();\n\n         // Create initial resources\n         if (this.image.width > 0) {\n            await this.createResources();\n         }\n\n         // Initialize recovery manager\n         this.recoveryManager = new RecoveryManager(this);\n\n         // Initialize the filter processing manager\n         this.filterManager = new FilterManager(this);\n\n         // Create test button in debug mode\n         if (this.debug) {\n            this.recoveryManager.createTestButton();\n         }\n\n         this.debugLogger.log('App', 'Initialization complete');\n\n         return true;\n\n      }\n      catch (error) {\n         this.debugLogger.error('App', 'Initialization failed', error);\n         throw error;\n      }\n\n   }\n\n   /**\n    * Creates or updates the recovery status element with proper styling\n    * @param {string} message - Optional message to display\n    * @param {string} status - Optional status (success, warning, error, recovery)\n    * @param {Error|string} errorDetails - Optional error object or message for error\n    * @returns {HTMLElement} The recovery status element\n    */\n   createRecoveryStatusElement(message = '', status = 'hidden', errorDetails = null) {\n      // Remove existing element if it exists\n      let statusEl = document.getElementById('recovery-status');\n      if (statusEl) {\n         statusEl.remove();\n      }\n\n      // Create new element\n      statusEl = document.createElement('div');\n      statusEl.id = 'recovery-status';\n\n      // Base styling\n      statusEl.style.position = 'fixed';\n      statusEl.style.top = '50%';\n      statusEl.style.left = '50%';\n      statusEl.style.transform = 'translate(-50%, -50%)';\n      statusEl.style.padding = '20px 30px';\n      statusEl.style.borderRadius = '8px';\n      statusEl.style.zIndex = '10000';\n      statusEl.style.textAlign = 'center';\n      statusEl.style.fontFamily = 'Arial, sans-serif';\n      statusEl.style.fontSize = '24px';\n      statusEl.style.transition = 'all 0.3s ease';\n      statusEl.style.boxShadow = '0 5px 15px rgba(0, 0, 0, 0.3)';\n      statusEl.style.minWidth = '300px';\n\n      // Status-specific styling\n      if (status === 'error') {\n         statusEl.style.backgroundColor = 'rgba(220, 53, 69, 0.9)';\n         statusEl.style.color = '#fff';\n         // Use provided message or generate default error message\n         if (!message) {\n            const errorMsg = errorDetails ?\n               (errorDetails.message || errorDetails.toString() || 'Unknown error occurred') :\n               'Unknown error occurred';\n\n            message = '<h3 style=\"margin: 0 0 10px 0;\">WebGPU Recovery Failed</h3>' +\n               `<p>${errorMsg}</p>` +\n               '<p style=\"margin-top: 10px;\">Retrying in 5 seconds...</p>';\n         }\n      } else if (status === 'warning') {\n         statusEl.style.backgroundColor = 'rgba(255, 193, 7, 0.9)';\n         statusEl.style.color = '#212529';\n         if (!message) {\n            message = '<h3 style=\"margin: 0 0 10px 0;\">WebGPU Warning</h3>' +\n               '<p>Performance may be affected</p>';\n         }\n      } else if (status === 'success') {\n         statusEl.style.backgroundColor = 'rgba(40, 167, 69, 0.9)';\n         statusEl.style.color = '#fff';\n         if (!message) {\n            message = '<h3 style=\"margin: 0 0 10px 0;\">Success</h3>' +\n               '<p>Operation completed successfully</p>';\n         }\n      } else if (status === 'recovery') {\n         statusEl.style.backgroundColor = 'rgba(0, 0, 0, 0.8)';\n         statusEl.style.color = '#fff';\n         if (!message) {\n            message = '<h3 style=\"margin: 0 0 10px 0;\">WebGPU Recovery</h3>' +\n               '<p>Recovering from GPU context loss...</p>' +\n               '<div style=\"width: 100%; height: 4px; margin-top: 15px; background: #333;\">' +\n               '<div id=\"recovery-progress\" style=\"width: 0%; height: 100%; background: #0f6\"></div></div>';\n         }\n      } else {\n         // Hidden or default style\n         statusEl.style.backgroundColor = 'rgba(0, 0, 0, 0.7)';\n         statusEl.style.color = '#fff';\n         statusEl.style.opacity = '0';\n         statusEl.style.pointerEvents = 'none';\n      }\n\n      // Set content\n      if (message) {\n         statusEl.innerHTML = message;\n      } else {\n         statusEl.innerHTML = '<h3 style=\"margin: 0 0 10px 0;\">WebGPU Status</h3>' +\n            '<p>Ready</p>';\n      }\n\n      document.body.appendChild(statusEl);\n      return statusEl;\n   }\n\n\n   // Delegating methods to FilterManager\n   async updateOutputCanvas(drawToCanvas, transformations, filterUpdateConditions) {\n      if (!this.filterManager) {\n         throw new Error('FilterManager not initialized');\n      }\n      return this.filterManager.updateOutputCanvas(drawToCanvas, transformations, filterUpdateConditions);\n   }\n\n   async updateFilters(filterUpdateConditions = false) {\n      if (!this.filterManager) {\n         throw new Error('FilterManager not initialized');\n      }\n      return this.filterManager.updateFilters(filterUpdateConditions);\n   }\n\n   waitForRenderComplete() {\n      if (!this.filterManager) {\n         throw new Error('FilterManager not initialized');\n      }\n      return this.filterManager.waitForRenderComplete();\n   }\n\n   /**\n   * Update the filter buffer\n   * @param {string} key - The property key to update.\n   * @param {number, array} value - The value to update the filters buffer with.\n   * @returns {Promise<void>}\n   */\n   async updateFilterBuffer(key, value) {\n\n      /**\n       * Recursively searches an object for a key and returns one or more arrays of keys that make up the object path.\n       * @param {Object} obj - The object to search within.\n       * @param {string} keyToFind - The key to search for.\n       * @returns {Array} - An array of objects that contain the key.\n       */\n      function findObjectsWithKey(obj, keyToFind) {\n         let result = [];\n\n         /**\n          * Recursively search the object for the key\n          * @param {Object} obj - The object to search within.\n          * @param {Array} path - The path to the object.\n          */\n         function search(obj, path) {\n\n            // If the object is not null and is an object\n            if (obj && typeof obj === 'object') {\n               // Check if the object has the key we are searching for\n               if (obj.hasOwnProperty(keyToFind)) {\n                  // If the key is found add the path to the result array\n                  result.push([...path, keyToFind]);\n               }\n               // Loop through the object keys\n               for (const key in obj) {\n                  // If the object at key is not null and is an object\n                  if (obj[key] && typeof obj[key] === 'object') {\n                     // Recursively search the object at key\n                     search(obj[key], [...path, key]);\n                  }\n               }\n            }\n         }\n\n         search(obj, []); // Start the search\n\n         // after searching the entire object return the arrays of paths\n         return result;\n      }\n\n      const pathArray = findObjectsWithKey(this.filters, key);\n\n      for (const path of pathArray) {\n         let filter;\n         let bindings = this.filters;\n\n         for (let i = 0; i < path.length - 1; i++) {\n            bindings = bindings[path[i]];\n            if (i === 0) filter = bindings;\n         }\n\n         const finalKey = path[path.length - 1];\n         bindings[finalKey].value = value;\n\n         // Validate the updated filter\n         try {\n            SettingsValidator.validateFilters({ [filter.label]: filter });\n         } catch (error) {\n            console.error('Filter validation failed after update:', error);\n            throw error;\n         }\n\n         // Update the buffer using the BufferManager if resources exist\n         if (filter.resources?.update) {\n            filter.resources.update({\n               [finalKey]: { value }\n            });\n         }\n      }\n   }\n\n   updateFilterInputTexture(filterKey, passIndex, bindingIndex, textureKey, textureIndex) {\n      if (!this.filterManager) {\n         throw new Error('FilterManager not initialized');\n      }\n      return this.filterManager.updateFilterInputTexture(\n         filterKey, passIndex, bindingIndex, textureKey, textureIndex\n      );\n   }\n\n   stopRender() {\n      if (this.filterManager) {\n         this.filterManager.stopRender();\n      }\n   }\n}\n\n\n\nexport default WebGpuRenderer;","\nimport { WebGpuRenderer } from './webGpuRenderer.js';\n\nexport const SequentialGPU = {\n   async createApp(settings) {\n      const webGpuRenderer = new WebGpuRenderer({\n         ...settings,\n      });\n      await webGpuRenderer.initialize();\n      // Return the renderer instance so it can be used by the app\n      return webGpuRenderer;\n   }\n};\n\nexport default SequentialGPU;"],"names":[],"mappings":"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"}